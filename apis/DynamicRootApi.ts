/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  DynamicRootRequestModel,
  DynamicRootResponseModel,
  NotificationHeaderModel,
} from '../models/index';
import {
    DynamicRootRequestModelFromJSON,
    DynamicRootRequestModelToJSON,
    DynamicRootResponseModelFromJSON,
    DynamicRootResponseModelToJSON,
    NotificationHeaderModelFromJSON,
    NotificationHeaderModelToJSON,
} from '../models/index';

export interface PostDynamicRootQueryRequest {
    dynamicRootRequestModel?: DynamicRootRequestModel;
}

/**
 * 
 */
export class DynamicRootApi extends runtime.BaseAPI {

    /**
     */
    async getDynamicRootStepsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<string>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("Backoffice User", []);
        }

        const response = await this.request({
            path: `/umbraco/management/api/v1/dynamic-root/steps`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     */
    async getDynamicRootSteps(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<string>> {
        const response = await this.getDynamicRootStepsRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async postDynamicRootQueryRaw(requestParameters: PostDynamicRootQueryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DynamicRootResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("Backoffice User", []);
        }

        const response = await this.request({
            path: `/umbraco/management/api/v1/dynamic-root/query`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: DynamicRootRequestModelToJSON(requestParameters['dynamicRootRequestModel']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DynamicRootResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async postDynamicRootQuery(requestParameters: PostDynamicRootQueryRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DynamicRootResponseModel> {
        const response = await this.postDynamicRootQueryRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
