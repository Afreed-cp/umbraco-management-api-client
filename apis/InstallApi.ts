/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  DatabaseInstallRequestModel,
  InstallRequestModel,
  InstallSettingsResponseModel,
  NotificationHeaderModel,
  ProblemDetails,
} from '../models/index';
import {
    DatabaseInstallRequestModelFromJSON,
    DatabaseInstallRequestModelToJSON,
    InstallRequestModelFromJSON,
    InstallRequestModelToJSON,
    InstallSettingsResponseModelFromJSON,
    InstallSettingsResponseModelToJSON,
    NotificationHeaderModelFromJSON,
    NotificationHeaderModelToJSON,
    ProblemDetailsFromJSON,
    ProblemDetailsToJSON,
} from '../models/index';

export interface PostInstallSetupRequest {
    installRequestModel?: InstallRequestModel;
}

export interface PostInstallValidateDatabaseRequest {
    databaseInstallRequestModel?: DatabaseInstallRequestModel;
}

/**
 * 
 */
export class InstallApi extends runtime.BaseAPI {

    /**
     */
    async getInstallSettingsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<InstallSettingsResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/umbraco/management/api/v1/install/settings`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => InstallSettingsResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async getInstallSettings(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<InstallSettingsResponseModel> {
        const response = await this.getInstallSettingsRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async postInstallSetupRaw(requestParameters: PostInstallSetupRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/umbraco/management/api/v1/install/setup`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: InstallRequestModelToJSON(requestParameters['installRequestModel']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async postInstallSetup(requestParameters: PostInstallSetupRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.postInstallSetupRaw(requestParameters, initOverrides);
    }

    /**
     */
    async postInstallValidateDatabaseRaw(requestParameters: PostInstallValidateDatabaseRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/umbraco/management/api/v1/install/validate-database`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: DatabaseInstallRequestModelToJSON(requestParameters['databaseInstallRequestModel']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async postInstallValidateDatabase(requestParameters: PostInstallValidateDatabaseRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.postInstallValidateDatabaseRaw(requestParameters, initOverrides);
    }

}
