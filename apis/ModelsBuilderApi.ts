/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ModelsBuilderResponseModel,
  NotificationHeaderModel,
  OutOfDateStatusResponseModel,
  ProblemDetails,
} from '../models/index';
import {
    ModelsBuilderResponseModelFromJSON,
    ModelsBuilderResponseModelToJSON,
    NotificationHeaderModelFromJSON,
    NotificationHeaderModelToJSON,
    OutOfDateStatusResponseModelFromJSON,
    OutOfDateStatusResponseModelToJSON,
    ProblemDetailsFromJSON,
    ProblemDetailsToJSON,
} from '../models/index';

/**
 * 
 */
export class ModelsBuilderApi extends runtime.BaseAPI {

    /**
     */
    async getModelsBuilderDashboardRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ModelsBuilderResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("Backoffice User", []);
        }

        const response = await this.request({
            path: `/umbraco/management/api/v1/models-builder/dashboard`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ModelsBuilderResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async getModelsBuilderDashboard(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ModelsBuilderResponseModel> {
        const response = await this.getModelsBuilderDashboardRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async getModelsBuilderStatusRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OutOfDateStatusResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("Backoffice User", []);
        }

        const response = await this.request({
            path: `/umbraco/management/api/v1/models-builder/status`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => OutOfDateStatusResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async getModelsBuilderStatus(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OutOfDateStatusResponseModel> {
        const response = await this.getModelsBuilderStatusRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async postModelsBuilderBuildRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("Backoffice User", []);
        }

        const response = await this.request({
            path: `/umbraco/management/api/v1/models-builder/build`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async postModelsBuilderBuild(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.postModelsBuilderBuildRaw(initOverrides);
    }

}
