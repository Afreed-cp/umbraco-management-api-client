/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CreatePackageRequestModel,
  NotificationHeaderModel,
  PackageConfigurationResponseModel,
  PackageDefinitionResponseModel,
  PagedPackageDefinitionResponseModel,
  PagedPackageMigrationStatusResponseModel,
  ProblemDetails,
  UpdatePackageRequestModel,
} from '../models/index';
import {
    CreatePackageRequestModelFromJSON,
    CreatePackageRequestModelToJSON,
    NotificationHeaderModelFromJSON,
    NotificationHeaderModelToJSON,
    PackageConfigurationResponseModelFromJSON,
    PackageConfigurationResponseModelToJSON,
    PackageDefinitionResponseModelFromJSON,
    PackageDefinitionResponseModelToJSON,
    PagedPackageDefinitionResponseModelFromJSON,
    PagedPackageDefinitionResponseModelToJSON,
    PagedPackageMigrationStatusResponseModelFromJSON,
    PagedPackageMigrationStatusResponseModelToJSON,
    ProblemDetailsFromJSON,
    ProblemDetailsToJSON,
    UpdatePackageRequestModelFromJSON,
    UpdatePackageRequestModelToJSON,
} from '../models/index';

export interface DeletePackageCreatedByIdRequest {
    id: string;
}

export interface GetPackageCreatedRequest {
    skip?: number;
    take?: number;
}

export interface GetPackageCreatedByIdRequest {
    id: string;
}

export interface GetPackageCreatedByIdDownloadRequest {
    id: string;
}

export interface GetPackageMigrationStatusRequest {
    skip?: number;
    take?: number;
}

export interface PostPackageByNameRunMigrationRequest {
    name: string;
}

export interface PostPackageCreatedRequest {
    createPackageRequestModel?: CreatePackageRequestModel;
}

export interface PutPackageCreatedByIdRequest {
    id: string;
    updatePackageRequestModel?: Omit<UpdatePackageRequestModel, 'packagePath'>;
}

/**
 * 
 */
export class PackageApi extends runtime.BaseAPI {

    /**
     */
    async deletePackageCreatedByIdRaw(requestParameters: DeletePackageCreatedByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling deletePackageCreatedById().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("Backoffice User", []);
        }

        const response = await this.request({
            path: `/umbraco/management/api/v1/package/created/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async deletePackageCreatedById(requestParameters: DeletePackageCreatedByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.deletePackageCreatedByIdRaw(requestParameters, initOverrides);
    }

    /**
     */
    async getPackageConfigurationRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PackageConfigurationResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("Backoffice User", []);
        }

        const response = await this.request({
            path: `/umbraco/management/api/v1/package/configuration`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PackageConfigurationResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async getPackageConfiguration(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PackageConfigurationResponseModel> {
        const response = await this.getPackageConfigurationRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async getPackageCreatedRaw(requestParameters: GetPackageCreatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PagedPackageDefinitionResponseModel>> {
        const queryParameters: any = {};

        if (requestParameters['skip'] != null) {
            queryParameters['skip'] = requestParameters['skip'];
        }

        if (requestParameters['take'] != null) {
            queryParameters['take'] = requestParameters['take'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("Backoffice User", []);
        }

        const response = await this.request({
            path: `/umbraco/management/api/v1/package/created`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PagedPackageDefinitionResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async getPackageCreated(requestParameters: GetPackageCreatedRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PagedPackageDefinitionResponseModel> {
        const response = await this.getPackageCreatedRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async getPackageCreatedByIdRaw(requestParameters: GetPackageCreatedByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PackageDefinitionResponseModel>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling getPackageCreatedById().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("Backoffice User", []);
        }

        const response = await this.request({
            path: `/umbraco/management/api/v1/package/created/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PackageDefinitionResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async getPackageCreatedById(requestParameters: GetPackageCreatedByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PackageDefinitionResponseModel> {
        const response = await this.getPackageCreatedByIdRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async getPackageCreatedByIdDownloadRaw(requestParameters: GetPackageCreatedByIdDownloadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Blob>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling getPackageCreatedByIdDownload().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("Backoffice User", []);
        }

        const response = await this.request({
            path: `/umbraco/management/api/v1/package/created/{id}/download`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.BlobApiResponse(response);
    }

    /**
     */
    async getPackageCreatedByIdDownload(requestParameters: GetPackageCreatedByIdDownloadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Blob> {
        const response = await this.getPackageCreatedByIdDownloadRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async getPackageMigrationStatusRaw(requestParameters: GetPackageMigrationStatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PagedPackageMigrationStatusResponseModel>> {
        const queryParameters: any = {};

        if (requestParameters['skip'] != null) {
            queryParameters['skip'] = requestParameters['skip'];
        }

        if (requestParameters['take'] != null) {
            queryParameters['take'] = requestParameters['take'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("Backoffice User", []);
        }

        const response = await this.request({
            path: `/umbraco/management/api/v1/package/migration-status`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PagedPackageMigrationStatusResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async getPackageMigrationStatus(requestParameters: GetPackageMigrationStatusRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PagedPackageMigrationStatusResponseModel> {
        const response = await this.getPackageMigrationStatusRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async postPackageByNameRunMigrationRaw(requestParameters: PostPackageByNameRunMigrationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['name'] == null) {
            throw new runtime.RequiredError(
                'name',
                'Required parameter "name" was null or undefined when calling postPackageByNameRunMigration().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("Backoffice User", []);
        }

        const response = await this.request({
            path: `/umbraco/management/api/v1/package/{name}/run-migration`.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters['name']))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async postPackageByNameRunMigration(requestParameters: PostPackageByNameRunMigrationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.postPackageByNameRunMigrationRaw(requestParameters, initOverrides);
    }

    /**
     */
    async postPackageCreatedRaw(requestParameters: PostPackageCreatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("Backoffice User", []);
        }

        const response = await this.request({
            path: `/umbraco/management/api/v1/package/created`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreatePackageRequestModelToJSON(requestParameters['createPackageRequestModel']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async postPackageCreated(requestParameters: PostPackageCreatedRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.postPackageCreatedRaw(requestParameters, initOverrides);
    }

    /**
     */
    async putPackageCreatedByIdRaw(requestParameters: PutPackageCreatedByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling putPackageCreatedById().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("Backoffice User", []);
        }

        const response = await this.request({
            path: `/umbraco/management/api/v1/package/created/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: UpdatePackageRequestModelToJSON(requestParameters['updatePackageRequestModel']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async putPackageCreatedById(requestParameters: PutPackageCreatedByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.putPackageCreatedByIdRaw(requestParameters, initOverrides);
    }

}
