/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  PagedTagResponseModel,
} from '../models/index';
import {
    PagedTagResponseModelFromJSON,
    PagedTagResponseModelToJSON,
} from '../models/index';

export interface GetTagRequest {
    query?: string;
    tagGroup?: string;
    culture?: string;
    skip?: number;
    take?: number;
}

/**
 * 
 */
export class TagApi extends runtime.BaseAPI {

    /**
     */
    async getTagRaw(requestParameters: GetTagRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PagedTagResponseModel>> {
        const queryParameters: any = {};

        if (requestParameters['query'] != null) {
            queryParameters['query'] = requestParameters['query'];
        }

        if (requestParameters['tagGroup'] != null) {
            queryParameters['tagGroup'] = requestParameters['tagGroup'];
        }

        if (requestParameters['culture'] != null) {
            queryParameters['culture'] = requestParameters['culture'];
        }

        if (requestParameters['skip'] != null) {
            queryParameters['skip'] = requestParameters['skip'];
        }

        if (requestParameters['take'] != null) {
            queryParameters['take'] = requestParameters['take'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("Backoffice User", []);
        }

        const response = await this.request({
            path: `/umbraco/management/api/v1/tag`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PagedTagResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async getTag(requestParameters: GetTagRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PagedTagResponseModel> {
        const response = await this.getTagRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
