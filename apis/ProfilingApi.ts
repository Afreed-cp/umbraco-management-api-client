/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  NotificationHeaderModel,
  ProfilingStatusRequestModel,
  ProfilingStatusResponseModel,
} from '../models/index';
import {
    NotificationHeaderModelFromJSON,
    NotificationHeaderModelToJSON,
    ProfilingStatusRequestModelFromJSON,
    ProfilingStatusRequestModelToJSON,
    ProfilingStatusResponseModelFromJSON,
    ProfilingStatusResponseModelToJSON,
} from '../models/index';

export interface PutProfilingStatusRequest {
    profilingStatusRequestModel?: ProfilingStatusRequestModel;
}

/**
 * 
 */
export class ProfilingApi extends runtime.BaseAPI {

    /**
     */
    async getProfilingStatusRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProfilingStatusResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("Backoffice User", []);
        }

        const response = await this.request({
            path: `/umbraco/management/api/v1/profiling/status`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ProfilingStatusResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async getProfilingStatus(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProfilingStatusResponseModel> {
        const response = await this.getProfilingStatusRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async putProfilingStatusRaw(requestParameters: PutProfilingStatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("Backoffice User", []);
        }

        const response = await this.request({
            path: `/umbraco/management/api/v1/profiling/status`,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: ProfilingStatusRequestModelToJSON(requestParameters['profilingStatusRequestModel']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async putProfilingStatus(requestParameters: PutProfilingStatusRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.putProfilingStatusRaw(requestParameters, initOverrides);
    }

}
