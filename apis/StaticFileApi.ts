/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  GetItemStaticFile200ResponseInner,
  GetTreePartialViewAncestors200ResponseInner,
  PagedFileSystemTreeItemPresentationModel,
} from '../models/index';
import {
    GetItemStaticFile200ResponseInnerFromJSON,
    GetItemStaticFile200ResponseInnerToJSON,
    GetTreePartialViewAncestors200ResponseInnerFromJSON,
    GetTreePartialViewAncestors200ResponseInnerToJSON,
    PagedFileSystemTreeItemPresentationModelFromJSON,
    PagedFileSystemTreeItemPresentationModelToJSON,
} from '../models/index';

export interface GetItemStaticFileRequest {
    path?: Set<string>;
}

export interface GetTreeStaticFileAncestorsRequest {
    descendantPath?: string;
}

export interface GetTreeStaticFileChildrenRequest {
    parentPath?: string;
    skip?: number;
    take?: number;
}

export interface GetTreeStaticFileRootRequest {
    skip?: number;
    take?: number;
}

/**
 * 
 */
export class StaticFileApi extends runtime.BaseAPI {

    /**
     */
    async getItemStaticFileRaw(requestParameters: GetItemStaticFileRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<GetItemStaticFile200ResponseInner>>> {
        const queryParameters: any = {};

        if (requestParameters['path'] != null) {
            queryParameters['path'] = requestParameters['path'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("Backoffice User", []);
        }

        const response = await this.request({
            path: `/umbraco/management/api/v1/item/static-file`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(GetItemStaticFile200ResponseInnerFromJSON));
    }

    /**
     */
    async getItemStaticFile(requestParameters: GetItemStaticFileRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<GetItemStaticFile200ResponseInner>> {
        const response = await this.getItemStaticFileRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async getTreeStaticFileAncestorsRaw(requestParameters: GetTreeStaticFileAncestorsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<GetTreePartialViewAncestors200ResponseInner>>> {
        const queryParameters: any = {};

        if (requestParameters['descendantPath'] != null) {
            queryParameters['descendantPath'] = requestParameters['descendantPath'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("Backoffice User", []);
        }

        const response = await this.request({
            path: `/umbraco/management/api/v1/tree/static-file/ancestors`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(GetTreePartialViewAncestors200ResponseInnerFromJSON));
    }

    /**
     */
    async getTreeStaticFileAncestors(requestParameters: GetTreeStaticFileAncestorsRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<GetTreePartialViewAncestors200ResponseInner>> {
        const response = await this.getTreeStaticFileAncestorsRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async getTreeStaticFileChildrenRaw(requestParameters: GetTreeStaticFileChildrenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PagedFileSystemTreeItemPresentationModel>> {
        const queryParameters: any = {};

        if (requestParameters['parentPath'] != null) {
            queryParameters['parentPath'] = requestParameters['parentPath'];
        }

        if (requestParameters['skip'] != null) {
            queryParameters['skip'] = requestParameters['skip'];
        }

        if (requestParameters['take'] != null) {
            queryParameters['take'] = requestParameters['take'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("Backoffice User", []);
        }

        const response = await this.request({
            path: `/umbraco/management/api/v1/tree/static-file/children`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PagedFileSystemTreeItemPresentationModelFromJSON(jsonValue));
    }

    /**
     */
    async getTreeStaticFileChildren(requestParameters: GetTreeStaticFileChildrenRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PagedFileSystemTreeItemPresentationModel> {
        const response = await this.getTreeStaticFileChildrenRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async getTreeStaticFileRootRaw(requestParameters: GetTreeStaticFileRootRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PagedFileSystemTreeItemPresentationModel>> {
        const queryParameters: any = {};

        if (requestParameters['skip'] != null) {
            queryParameters['skip'] = requestParameters['skip'];
        }

        if (requestParameters['take'] != null) {
            queryParameters['take'] = requestParameters['take'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("Backoffice User", []);
        }

        const response = await this.request({
            path: `/umbraco/management/api/v1/tree/static-file/root`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PagedFileSystemTreeItemPresentationModelFromJSON(jsonValue));
    }

    /**
     */
    async getTreeStaticFileRoot(requestParameters: GetTreeStaticFileRootRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PagedFileSystemTreeItemPresentationModel> {
        const response = await this.getTreeStaticFileRootRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
