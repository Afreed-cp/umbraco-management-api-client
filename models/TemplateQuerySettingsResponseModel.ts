/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TemplateQuerySettingsResponseModelOperatorsInner } from './TemplateQuerySettingsResponseModelOperatorsInner';
import {
    TemplateQuerySettingsResponseModelOperatorsInnerFromJSON,
    TemplateQuerySettingsResponseModelOperatorsInnerFromJSONTyped,
    TemplateQuerySettingsResponseModelOperatorsInnerToJSON,
    TemplateQuerySettingsResponseModelOperatorsInnerToJSONTyped,
} from './TemplateQuerySettingsResponseModelOperatorsInner';
import type { TemplateQuerySettingsResponseModelPropertiesInner } from './TemplateQuerySettingsResponseModelPropertiesInner';
import {
    TemplateQuerySettingsResponseModelPropertiesInnerFromJSON,
    TemplateQuerySettingsResponseModelPropertiesInnerFromJSONTyped,
    TemplateQuerySettingsResponseModelPropertiesInnerToJSON,
    TemplateQuerySettingsResponseModelPropertiesInnerToJSONTyped,
} from './TemplateQuerySettingsResponseModelPropertiesInner';

/**
 * 
 * @export
 * @interface TemplateQuerySettingsResponseModel
 */
export interface TemplateQuerySettingsResponseModel {
    /**
     * 
     * @type {Array<string>}
     * @memberof TemplateQuerySettingsResponseModel
     */
    documentTypeAliases: Array<string>;
    /**
     * 
     * @type {Array<TemplateQuerySettingsResponseModelPropertiesInner>}
     * @memberof TemplateQuerySettingsResponseModel
     */
    properties: Array<TemplateQuerySettingsResponseModelPropertiesInner>;
    /**
     * 
     * @type {Array<TemplateQuerySettingsResponseModelOperatorsInner>}
     * @memberof TemplateQuerySettingsResponseModel
     */
    operators: Array<TemplateQuerySettingsResponseModelOperatorsInner>;
}

/**
 * Check if a given object implements the TemplateQuerySettingsResponseModel interface.
 */
export function instanceOfTemplateQuerySettingsResponseModel(value: object): value is TemplateQuerySettingsResponseModel {
    if (!('documentTypeAliases' in value) || value['documentTypeAliases'] === undefined) return false;
    if (!('properties' in value) || value['properties'] === undefined) return false;
    if (!('operators' in value) || value['operators'] === undefined) return false;
    return true;
}

export function TemplateQuerySettingsResponseModelFromJSON(json: any): TemplateQuerySettingsResponseModel {
    return TemplateQuerySettingsResponseModelFromJSONTyped(json, false);
}

export function TemplateQuerySettingsResponseModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): TemplateQuerySettingsResponseModel {
    if (json == null) {
        return json;
    }
    return {
        
        'documentTypeAliases': json['documentTypeAliases'],
        'properties': ((json['properties'] as Array<any>).map(TemplateQuerySettingsResponseModelPropertiesInnerFromJSON)),
        'operators': ((json['operators'] as Array<any>).map(TemplateQuerySettingsResponseModelOperatorsInnerFromJSON)),
    };
}

export function TemplateQuerySettingsResponseModelToJSON(json: any): TemplateQuerySettingsResponseModel {
    return TemplateQuerySettingsResponseModelToJSONTyped(json, false);
}

export function TemplateQuerySettingsResponseModelToJSONTyped(value?: TemplateQuerySettingsResponseModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'documentTypeAliases': value['documentTypeAliases'],
        'properties': ((value['properties'] as Array<any>).map(TemplateQuerySettingsResponseModelPropertiesInnerToJSON)),
        'operators': ((value['operators'] as Array<any>).map(TemplateQuerySettingsResponseModelOperatorsInnerToJSON)),
    };
}

