/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PropertyTypeValidationModel } from './PropertyTypeValidationModel';
import {
    PropertyTypeValidationModelFromJSON,
    PropertyTypeValidationModelFromJSONTyped,
    PropertyTypeValidationModelToJSON,
    PropertyTypeValidationModelToJSONTyped,
} from './PropertyTypeValidationModel';
import type { PropertyTypeAppearanceModel } from './PropertyTypeAppearanceModel';
import {
    PropertyTypeAppearanceModelFromJSON,
    PropertyTypeAppearanceModelFromJSONTyped,
    PropertyTypeAppearanceModelToJSON,
    PropertyTypeAppearanceModelToJSONTyped,
} from './PropertyTypeAppearanceModel';
import type { ReferenceByIdModel } from './ReferenceByIdModel';
import {
    ReferenceByIdModelFromJSON,
    ReferenceByIdModelFromJSONTyped,
    ReferenceByIdModelToJSON,
    ReferenceByIdModelToJSONTyped,
} from './ReferenceByIdModel';

/**
 * 
 * @export
 * @interface DocumentTypePropertyTypeResponseModel
 */
export interface DocumentTypePropertyTypeResponseModel {
    /**
     * 
     * @type {string}
     * @memberof DocumentTypePropertyTypeResponseModel
     */
    id: string;
    /**
     * 
     * @type {ReferenceByIdModel}
     * @memberof DocumentTypePropertyTypeResponseModel
     */
    container?: ReferenceByIdModel | null;
    /**
     * 
     * @type {number}
     * @memberof DocumentTypePropertyTypeResponseModel
     */
    sortOrder: number;
    /**
     * 
     * @type {string}
     * @memberof DocumentTypePropertyTypeResponseModel
     */
    alias: string;
    /**
     * 
     * @type {string}
     * @memberof DocumentTypePropertyTypeResponseModel
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof DocumentTypePropertyTypeResponseModel
     */
    description?: string | null;
    /**
     * 
     * @type {ReferenceByIdModel}
     * @memberof DocumentTypePropertyTypeResponseModel
     */
    dataType: ReferenceByIdModel;
    /**
     * 
     * @type {boolean}
     * @memberof DocumentTypePropertyTypeResponseModel
     */
    variesByCulture: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof DocumentTypePropertyTypeResponseModel
     */
    variesBySegment: boolean;
    /**
     * 
     * @type {PropertyTypeValidationModel}
     * @memberof DocumentTypePropertyTypeResponseModel
     */
    validation: PropertyTypeValidationModel;
    /**
     * 
     * @type {PropertyTypeAppearanceModel}
     * @memberof DocumentTypePropertyTypeResponseModel
     */
    appearance: PropertyTypeAppearanceModel;
}

/**
 * Check if a given object implements the DocumentTypePropertyTypeResponseModel interface.
 */
export function instanceOfDocumentTypePropertyTypeResponseModel(value: object): value is DocumentTypePropertyTypeResponseModel {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('sortOrder' in value) || value['sortOrder'] === undefined) return false;
    if (!('alias' in value) || value['alias'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('dataType' in value) || value['dataType'] === undefined) return false;
    if (!('variesByCulture' in value) || value['variesByCulture'] === undefined) return false;
    if (!('variesBySegment' in value) || value['variesBySegment'] === undefined) return false;
    if (!('validation' in value) || value['validation'] === undefined) return false;
    if (!('appearance' in value) || value['appearance'] === undefined) return false;
    return true;
}

export function DocumentTypePropertyTypeResponseModelFromJSON(json: any): DocumentTypePropertyTypeResponseModel {
    return DocumentTypePropertyTypeResponseModelFromJSONTyped(json, false);
}

export function DocumentTypePropertyTypeResponseModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): DocumentTypePropertyTypeResponseModel {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'container': json['container'] == null ? undefined : ReferenceByIdModelFromJSON(json['container']),
        'sortOrder': json['sortOrder'],
        'alias': json['alias'],
        'name': json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'dataType': ReferenceByIdModelFromJSON(json['dataType']),
        'variesByCulture': json['variesByCulture'],
        'variesBySegment': json['variesBySegment'],
        'validation': PropertyTypeValidationModelFromJSON(json['validation']),
        'appearance': PropertyTypeAppearanceModelFromJSON(json['appearance']),
    };
}

export function DocumentTypePropertyTypeResponseModelToJSON(json: any): DocumentTypePropertyTypeResponseModel {
    return DocumentTypePropertyTypeResponseModelToJSONTyped(json, false);
}

export function DocumentTypePropertyTypeResponseModelToJSONTyped(value?: DocumentTypePropertyTypeResponseModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'container': ReferenceByIdModelToJSON(value['container']),
        'sortOrder': value['sortOrder'],
        'alias': value['alias'],
        'name': value['name'],
        'description': value['description'],
        'dataType': ReferenceByIdModelToJSON(value['dataType']),
        'variesByCulture': value['variesByCulture'],
        'variesBySegment': value['variesBySegment'],
        'validation': PropertyTypeValidationModelToJSON(value['validation']),
        'appearance': PropertyTypeAppearanceModelToJSON(value['appearance']),
    };
}

