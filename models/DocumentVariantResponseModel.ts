/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DocumentVariantStateModel } from './DocumentVariantStateModel';
import {
    DocumentVariantStateModelFromJSON,
    DocumentVariantStateModelFromJSONTyped,
    DocumentVariantStateModelToJSON,
    DocumentVariantStateModelToJSONTyped,
} from './DocumentVariantStateModel';

/**
 * 
 * @export
 * @interface DocumentVariantResponseModel
 */
export interface DocumentVariantResponseModel {
    /**
     * 
     * @type {string}
     * @memberof DocumentVariantResponseModel
     */
    culture?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DocumentVariantResponseModel
     */
    segment?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DocumentVariantResponseModel
     */
    name: string;
    /**
     * 
     * @type {Date}
     * @memberof DocumentVariantResponseModel
     */
    createDate: Date;
    /**
     * 
     * @type {Date}
     * @memberof DocumentVariantResponseModel
     */
    updateDate: Date;
    /**
     * 
     * @type {DocumentVariantStateModel}
     * @memberof DocumentVariantResponseModel
     */
    state: DocumentVariantStateModel;
    /**
     * 
     * @type {Date}
     * @memberof DocumentVariantResponseModel
     */
    publishDate?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof DocumentVariantResponseModel
     */
    scheduledPublishDate?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof DocumentVariantResponseModel
     */
    scheduledUnpublishDate?: Date | null;
}



/**
 * Check if a given object implements the DocumentVariantResponseModel interface.
 */
export function instanceOfDocumentVariantResponseModel(value: object): value is DocumentVariantResponseModel {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('createDate' in value) || value['createDate'] === undefined) return false;
    if (!('updateDate' in value) || value['updateDate'] === undefined) return false;
    if (!('state' in value) || value['state'] === undefined) return false;
    return true;
}

export function DocumentVariantResponseModelFromJSON(json: any): DocumentVariantResponseModel {
    return DocumentVariantResponseModelFromJSONTyped(json, false);
}

export function DocumentVariantResponseModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): DocumentVariantResponseModel {
    if (json == null) {
        return json;
    }
    return {
        
        'culture': json['culture'] == null ? undefined : json['culture'],
        'segment': json['segment'] == null ? undefined : json['segment'],
        'name': json['name'],
        'createDate': (new Date(json['createDate'])),
        'updateDate': (new Date(json['updateDate'])),
        'state': DocumentVariantStateModelFromJSON(json['state']),
        'publishDate': json['publishDate'] == null ? undefined : (new Date(json['publishDate'])),
        'scheduledPublishDate': json['scheduledPublishDate'] == null ? undefined : (new Date(json['scheduledPublishDate'])),
        'scheduledUnpublishDate': json['scheduledUnpublishDate'] == null ? undefined : (new Date(json['scheduledUnpublishDate'])),
    };
}

export function DocumentVariantResponseModelToJSON(json: any): DocumentVariantResponseModel {
    return DocumentVariantResponseModelToJSONTyped(json, false);
}

export function DocumentVariantResponseModelToJSONTyped(value?: DocumentVariantResponseModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'culture': value['culture'],
        'segment': value['segment'],
        'name': value['name'],
        'createDate': ((value['createDate']).toISOString()),
        'updateDate': ((value['updateDate']).toISOString()),
        'state': DocumentVariantStateModelToJSON(value['state']),
        'publishDate': value['publishDate'] == null ? undefined : ((value['publishDate'] as any).toISOString()),
        'scheduledPublishDate': value['scheduledPublishDate'] == null ? undefined : ((value['scheduledPublishDate'] as any).toISOString()),
        'scheduledUnpublishDate': value['scheduledUnpublishDate'] == null ? undefined : ((value['scheduledUnpublishDate'] as any).toISOString()),
    };
}

