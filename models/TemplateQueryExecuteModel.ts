/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TemplateQueryExecuteSortModel } from './TemplateQueryExecuteSortModel';
import {
    TemplateQueryExecuteSortModelFromJSON,
    TemplateQueryExecuteSortModelFromJSONTyped,
    TemplateQueryExecuteSortModelToJSON,
    TemplateQueryExecuteSortModelToJSONTyped,
} from './TemplateQueryExecuteSortModel';
import type { ReferenceByIdModel } from './ReferenceByIdModel';
import {
    ReferenceByIdModelFromJSON,
    ReferenceByIdModelFromJSONTyped,
    ReferenceByIdModelToJSON,
    ReferenceByIdModelToJSONTyped,
} from './ReferenceByIdModel';
import type { TemplateQueryExecuteModelFiltersInner } from './TemplateQueryExecuteModelFiltersInner';
import {
    TemplateQueryExecuteModelFiltersInnerFromJSON,
    TemplateQueryExecuteModelFiltersInnerFromJSONTyped,
    TemplateQueryExecuteModelFiltersInnerToJSON,
    TemplateQueryExecuteModelFiltersInnerToJSONTyped,
} from './TemplateQueryExecuteModelFiltersInner';

/**
 * 
 * @export
 * @interface TemplateQueryExecuteModel
 */
export interface TemplateQueryExecuteModel {
    /**
     * 
     * @type {ReferenceByIdModel}
     * @memberof TemplateQueryExecuteModel
     */
    rootDocument?: ReferenceByIdModel | null;
    /**
     * 
     * @type {string}
     * @memberof TemplateQueryExecuteModel
     */
    documentTypeAlias?: string | null;
    /**
     * 
     * @type {Array<TemplateQueryExecuteModelFiltersInner>}
     * @memberof TemplateQueryExecuteModel
     */
    filters?: Array<TemplateQueryExecuteModelFiltersInner> | null;
    /**
     * 
     * @type {TemplateQueryExecuteSortModel}
     * @memberof TemplateQueryExecuteModel
     */
    sort?: TemplateQueryExecuteSortModel | null;
    /**
     * 
     * @type {number}
     * @memberof TemplateQueryExecuteModel
     */
    take: number;
}

/**
 * Check if a given object implements the TemplateQueryExecuteModel interface.
 */
export function instanceOfTemplateQueryExecuteModel(value: object): value is TemplateQueryExecuteModel {
    if (!('take' in value) || value['take'] === undefined) return false;
    return true;
}

export function TemplateQueryExecuteModelFromJSON(json: any): TemplateQueryExecuteModel {
    return TemplateQueryExecuteModelFromJSONTyped(json, false);
}

export function TemplateQueryExecuteModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): TemplateQueryExecuteModel {
    if (json == null) {
        return json;
    }
    return {
        
        'rootDocument': json['rootDocument'] == null ? undefined : ReferenceByIdModelFromJSON(json['rootDocument']),
        'documentTypeAlias': json['documentTypeAlias'] == null ? undefined : json['documentTypeAlias'],
        'filters': json['filters'] == null ? undefined : ((json['filters'] as Array<any>).map(TemplateQueryExecuteModelFiltersInnerFromJSON)),
        'sort': json['sort'] == null ? undefined : TemplateQueryExecuteSortModelFromJSON(json['sort']),
        'take': json['take'],
    };
}

export function TemplateQueryExecuteModelToJSON(json: any): TemplateQueryExecuteModel {
    return TemplateQueryExecuteModelToJSONTyped(json, false);
}

export function TemplateQueryExecuteModelToJSONTyped(value?: TemplateQueryExecuteModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'rootDocument': ReferenceByIdModelToJSON(value['rootDocument']),
        'documentTypeAlias': value['documentTypeAlias'],
        'filters': value['filters'] == null ? undefined : ((value['filters'] as Array<any>).map(TemplateQueryExecuteModelFiltersInnerToJSON)),
        'sort': TemplateQueryExecuteSortModelToJSON(value['sort']),
        'take': value['take'],
    };
}

