/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DataTypeItemResponseModel
 */
export interface DataTypeItemResponseModel {
    /**
     * 
     * @type {string}
     * @memberof DataTypeItemResponseModel
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof DataTypeItemResponseModel
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof DataTypeItemResponseModel
     */
    editorUiAlias?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DataTypeItemResponseModel
     */
    editorAlias: string;
    /**
     * 
     * @type {boolean}
     * @memberof DataTypeItemResponseModel
     */
    isDeletable: boolean;
}

/**
 * Check if a given object implements the DataTypeItemResponseModel interface.
 */
export function instanceOfDataTypeItemResponseModel(value: object): value is DataTypeItemResponseModel {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('editorAlias' in value) || value['editorAlias'] === undefined) return false;
    if (!('isDeletable' in value) || value['isDeletable'] === undefined) return false;
    return true;
}

export function DataTypeItemResponseModelFromJSON(json: any): DataTypeItemResponseModel {
    return DataTypeItemResponseModelFromJSONTyped(json, false);
}

export function DataTypeItemResponseModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): DataTypeItemResponseModel {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'editorUiAlias': json['editorUiAlias'] == null ? undefined : json['editorUiAlias'],
        'editorAlias': json['editorAlias'],
        'isDeletable': json['isDeletable'],
    };
}

export function DataTypeItemResponseModelToJSON(json: any): DataTypeItemResponseModel {
    return DataTypeItemResponseModelToJSONTyped(json, false);
}

export function DataTypeItemResponseModelToJSONTyped(value?: DataTypeItemResponseModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'editorUiAlias': value['editorUiAlias'],
        'editorAlias': value['editorAlias'],
        'isDeletable': value['isDeletable'],
    };
}

