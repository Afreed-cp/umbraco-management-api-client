/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ServerConfigurationResponseModel
 */
export interface ServerConfigurationResponseModel {
    /**
     * 
     * @type {boolean}
     * @memberof ServerConfigurationResponseModel
     */
    allowPasswordReset: boolean;
    /**
     * 
     * @type {number}
     * @memberof ServerConfigurationResponseModel
     */
    versionCheckPeriod: number;
    /**
     * 
     * @type {boolean}
     * @memberof ServerConfigurationResponseModel
     */
    allowLocalLogin: boolean;
}

/**
 * Check if a given object implements the ServerConfigurationResponseModel interface.
 */
export function instanceOfServerConfigurationResponseModel(value: object): value is ServerConfigurationResponseModel {
    if (!('allowPasswordReset' in value) || value['allowPasswordReset'] === undefined) return false;
    if (!('versionCheckPeriod' in value) || value['versionCheckPeriod'] === undefined) return false;
    if (!('allowLocalLogin' in value) || value['allowLocalLogin'] === undefined) return false;
    return true;
}

export function ServerConfigurationResponseModelFromJSON(json: any): ServerConfigurationResponseModel {
    return ServerConfigurationResponseModelFromJSONTyped(json, false);
}

export function ServerConfigurationResponseModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ServerConfigurationResponseModel {
    if (json == null) {
        return json;
    }
    return {
        
        'allowPasswordReset': json['allowPasswordReset'],
        'versionCheckPeriod': json['versionCheckPeriod'],
        'allowLocalLogin': json['allowLocalLogin'],
    };
}

export function ServerConfigurationResponseModelToJSON(json: any): ServerConfigurationResponseModel {
    return ServerConfigurationResponseModelToJSONTyped(json, false);
}

export function ServerConfigurationResponseModelToJSONTyped(value?: ServerConfigurationResponseModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'allowPasswordReset': value['allowPasswordReset'],
        'versionCheckPeriod': value['versionCheckPeriod'],
        'allowLocalLogin': value['allowLocalLogin'],
    };
}

