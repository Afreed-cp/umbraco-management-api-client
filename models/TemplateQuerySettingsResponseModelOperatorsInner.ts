/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { TemplateQueryOperatorModel } from './TemplateQueryOperatorModel';
import {
    instanceOfTemplateQueryOperatorModel,
    TemplateQueryOperatorModelFromJSON,
    TemplateQueryOperatorModelFromJSONTyped,
    TemplateQueryOperatorModelToJSON,
} from './TemplateQueryOperatorModel';

/**
 * @type TemplateQuerySettingsResponseModelOperatorsInner
 * 
 * @export
 */
export type TemplateQuerySettingsResponseModelOperatorsInner = TemplateQueryOperatorModel;

export function TemplateQuerySettingsResponseModelOperatorsInnerFromJSON(json: any): TemplateQuerySettingsResponseModelOperatorsInner {
    return TemplateQuerySettingsResponseModelOperatorsInnerFromJSONTyped(json, false);
}

export function TemplateQuerySettingsResponseModelOperatorsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): TemplateQuerySettingsResponseModelOperatorsInner {
    if (json == null) {
        return json;
    }
    if (typeof json !== 'object') {
        return json;
    }
    if (instanceOfTemplateQueryOperatorModel(json)) {
        return TemplateQueryOperatorModelFromJSONTyped(json, true);
    }

    return {} as any;
}

export function TemplateQuerySettingsResponseModelOperatorsInnerToJSON(json: any): any {
    return TemplateQuerySettingsResponseModelOperatorsInnerToJSONTyped(json, false);
}

export function TemplateQuerySettingsResponseModelOperatorsInnerToJSONTyped(value?: TemplateQuerySettingsResponseModelOperatorsInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    if (typeof value !== 'object') {
        return value;
    }
    if (instanceOfTemplateQueryOperatorModel(value)) {
        return TemplateQueryOperatorModelToJSON(value as TemplateQueryOperatorModel);
    }

    return {};
}

