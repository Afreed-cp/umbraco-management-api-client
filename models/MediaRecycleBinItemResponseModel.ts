/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MediaItemResponseModelVariantsInner } from './MediaItemResponseModelVariantsInner';
import {
    MediaItemResponseModelVariantsInnerFromJSON,
    MediaItemResponseModelVariantsInnerFromJSONTyped,
    MediaItemResponseModelVariantsInnerToJSON,
    MediaItemResponseModelVariantsInnerToJSONTyped,
} from './MediaItemResponseModelVariantsInner';
import type { ItemReferenceByIdResponseModel } from './ItemReferenceByIdResponseModel';
import {
    ItemReferenceByIdResponseModelFromJSON,
    ItemReferenceByIdResponseModelFromJSONTyped,
    ItemReferenceByIdResponseModelToJSON,
    ItemReferenceByIdResponseModelToJSONTyped,
} from './ItemReferenceByIdResponseModel';
import type { MediaTypeReferenceResponseModel } from './MediaTypeReferenceResponseModel';
import {
    MediaTypeReferenceResponseModelFromJSON,
    MediaTypeReferenceResponseModelFromJSONTyped,
    MediaTypeReferenceResponseModelToJSON,
    MediaTypeReferenceResponseModelToJSONTyped,
} from './MediaTypeReferenceResponseModel';

/**
 * 
 * @export
 * @interface MediaRecycleBinItemResponseModel
 */
export interface MediaRecycleBinItemResponseModel {
    /**
     * 
     * @type {string}
     * @memberof MediaRecycleBinItemResponseModel
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof MediaRecycleBinItemResponseModel
     */
    createDate: Date;
    /**
     * 
     * @type {boolean}
     * @memberof MediaRecycleBinItemResponseModel
     */
    hasChildren: boolean;
    /**
     * 
     * @type {ItemReferenceByIdResponseModel}
     * @memberof MediaRecycleBinItemResponseModel
     */
    parent?: ItemReferenceByIdResponseModel | null;
    /**
     * 
     * @type {MediaTypeReferenceResponseModel}
     * @memberof MediaRecycleBinItemResponseModel
     */
    mediaType: MediaTypeReferenceResponseModel;
    /**
     * 
     * @type {Array<MediaItemResponseModelVariantsInner>}
     * @memberof MediaRecycleBinItemResponseModel
     */
    variants: Array<MediaItemResponseModelVariantsInner>;
}

/**
 * Check if a given object implements the MediaRecycleBinItemResponseModel interface.
 */
export function instanceOfMediaRecycleBinItemResponseModel(value: object): value is MediaRecycleBinItemResponseModel {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('createDate' in value) || value['createDate'] === undefined) return false;
    if (!('hasChildren' in value) || value['hasChildren'] === undefined) return false;
    if (!('mediaType' in value) || value['mediaType'] === undefined) return false;
    if (!('variants' in value) || value['variants'] === undefined) return false;
    return true;
}

export function MediaRecycleBinItemResponseModelFromJSON(json: any): MediaRecycleBinItemResponseModel {
    return MediaRecycleBinItemResponseModelFromJSONTyped(json, false);
}

export function MediaRecycleBinItemResponseModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): MediaRecycleBinItemResponseModel {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createDate': (new Date(json['createDate'])),
        'hasChildren': json['hasChildren'],
        'parent': json['parent'] == null ? undefined : ItemReferenceByIdResponseModelFromJSON(json['parent']),
        'mediaType': MediaTypeReferenceResponseModelFromJSON(json['mediaType']),
        'variants': ((json['variants'] as Array<any>).map(MediaItemResponseModelVariantsInnerFromJSON)),
    };
}

export function MediaRecycleBinItemResponseModelToJSON(json: any): MediaRecycleBinItemResponseModel {
    return MediaRecycleBinItemResponseModelToJSONTyped(json, false);
}

export function MediaRecycleBinItemResponseModelToJSONTyped(value?: MediaRecycleBinItemResponseModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'createDate': ((value['createDate']).toISOString()),
        'hasChildren': value['hasChildren'],
        'parent': ItemReferenceByIdResponseModelToJSON(value['parent']),
        'mediaType': MediaTypeReferenceResponseModelToJSON(value['mediaType']),
        'variants': ((value['variants'] as Array<any>).map(MediaItemResponseModelVariantsInnerToJSON)),
    };
}

