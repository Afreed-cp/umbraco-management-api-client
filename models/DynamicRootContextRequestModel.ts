/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ReferenceByIdModel } from './ReferenceByIdModel';
import {
    ReferenceByIdModelFromJSON,
    ReferenceByIdModelFromJSONTyped,
    ReferenceByIdModelToJSON,
    ReferenceByIdModelToJSONTyped,
} from './ReferenceByIdModel';

/**
 * 
 * @export
 * @interface DynamicRootContextRequestModel
 */
export interface DynamicRootContextRequestModel {
    /**
     * 
     * @type {string}
     * @memberof DynamicRootContextRequestModel
     */
    id?: string | null;
    /**
     * 
     * @type {ReferenceByIdModel}
     * @memberof DynamicRootContextRequestModel
     */
    parent: ReferenceByIdModel;
    /**
     * 
     * @type {string}
     * @memberof DynamicRootContextRequestModel
     */
    culture?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DynamicRootContextRequestModel
     */
    segment?: string | null;
}

/**
 * Check if a given object implements the DynamicRootContextRequestModel interface.
 */
export function instanceOfDynamicRootContextRequestModel(value: object): value is DynamicRootContextRequestModel {
    if (!('parent' in value) || value['parent'] === undefined) return false;
    return true;
}

export function DynamicRootContextRequestModelFromJSON(json: any): DynamicRootContextRequestModel {
    return DynamicRootContextRequestModelFromJSONTyped(json, false);
}

export function DynamicRootContextRequestModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): DynamicRootContextRequestModel {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'parent': ReferenceByIdModelFromJSON(json['parent']),
        'culture': json['culture'] == null ? undefined : json['culture'],
        'segment': json['segment'] == null ? undefined : json['segment'],
    };
}

export function DynamicRootContextRequestModelToJSON(json: any): DynamicRootContextRequestModel {
    return DynamicRootContextRequestModelToJSONTyped(json, false);
}

export function DynamicRootContextRequestModelToJSONTyped(value?: DynamicRootContextRequestModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'parent': ReferenceByIdModelToJSON(value['parent']),
        'culture': value['culture'],
        'segment': value['segment'],
    };
}

