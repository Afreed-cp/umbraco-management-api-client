/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { DataTypePropertyPresentationModel } from './DataTypePropertyPresentationModel';
import {
    instanceOfDataTypePropertyPresentationModel,
    DataTypePropertyPresentationModelFromJSON,
    DataTypePropertyPresentationModelFromJSONTyped,
    DataTypePropertyPresentationModelToJSON,
} from './DataTypePropertyPresentationModel';

/**
 * @type CreateDataTypeRequestModelValuesInner
 * 
 * @export
 */
export type CreateDataTypeRequestModelValuesInner = DataTypePropertyPresentationModel;

export function CreateDataTypeRequestModelValuesInnerFromJSON(json: any): CreateDataTypeRequestModelValuesInner {
    return CreateDataTypeRequestModelValuesInnerFromJSONTyped(json, false);
}

export function CreateDataTypeRequestModelValuesInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateDataTypeRequestModelValuesInner {
    if (json == null) {
        return json;
    }
    if (typeof json !== 'object') {
        return json;
    }
    if (instanceOfDataTypePropertyPresentationModel(json)) {
        return DataTypePropertyPresentationModelFromJSONTyped(json, true);
    }

    return {} as any;
}

export function CreateDataTypeRequestModelValuesInnerToJSON(json: any): any {
    return CreateDataTypeRequestModelValuesInnerToJSONTyped(json, false);
}

export function CreateDataTypeRequestModelValuesInnerToJSONTyped(value?: CreateDataTypeRequestModelValuesInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    if (typeof value !== 'object') {
        return value;
    }
    if (instanceOfDataTypePropertyPresentationModel(value)) {
        return DataTypePropertyPresentationModelToJSON(value as DataTypePropertyPresentationModel);
    }

    return {};
}

