/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FieldPresentationModel
 */
export interface FieldPresentationModel {
    /**
     * 
     * @type {string}
     * @memberof FieldPresentationModel
     */
    name: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof FieldPresentationModel
     */
    values: Array<string>;
}

/**
 * Check if a given object implements the FieldPresentationModel interface.
 */
export function instanceOfFieldPresentationModel(value: object): value is FieldPresentationModel {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('values' in value) || value['values'] === undefined) return false;
    return true;
}

export function FieldPresentationModelFromJSON(json: any): FieldPresentationModel {
    return FieldPresentationModelFromJSONTyped(json, false);
}

export function FieldPresentationModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): FieldPresentationModel {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'values': json['values'],
    };
}

export function FieldPresentationModelToJSON(json: any): FieldPresentationModel {
    return FieldPresentationModelToJSONTyped(json, false);
}

export function FieldPresentationModelToJSONTyped(value?: FieldPresentationModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'values': value['values'],
    };
}

