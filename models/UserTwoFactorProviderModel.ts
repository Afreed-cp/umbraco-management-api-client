/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserTwoFactorProviderModel
 */
export interface UserTwoFactorProviderModel {
    /**
     * 
     * @type {string}
     * @memberof UserTwoFactorProviderModel
     */
    providerName: string;
    /**
     * 
     * @type {boolean}
     * @memberof UserTwoFactorProviderModel
     */
    isEnabledOnUser: boolean;
}

/**
 * Check if a given object implements the UserTwoFactorProviderModel interface.
 */
export function instanceOfUserTwoFactorProviderModel(value: object): value is UserTwoFactorProviderModel {
    if (!('providerName' in value) || value['providerName'] === undefined) return false;
    if (!('isEnabledOnUser' in value) || value['isEnabledOnUser'] === undefined) return false;
    return true;
}

export function UserTwoFactorProviderModelFromJSON(json: any): UserTwoFactorProviderModel {
    return UserTwoFactorProviderModelFromJSONTyped(json, false);
}

export function UserTwoFactorProviderModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserTwoFactorProviderModel {
    if (json == null) {
        return json;
    }
    return {
        
        'providerName': json['providerName'],
        'isEnabledOnUser': json['isEnabledOnUser'],
    };
}

export function UserTwoFactorProviderModelToJSON(json: any): UserTwoFactorProviderModel {
    return UserTwoFactorProviderModelToJSONTyped(json, false);
}

export function UserTwoFactorProviderModelToJSONTyped(value?: UserTwoFactorProviderModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'providerName': value['providerName'],
        'isEnabledOnUser': value['isEnabledOnUser'],
    };
}

