/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CreateMediaRequestModelValuesInner } from './CreateMediaRequestModelValuesInner';
import {
    CreateMediaRequestModelValuesInnerFromJSON,
    CreateMediaRequestModelValuesInnerFromJSONTyped,
    CreateMediaRequestModelValuesInnerToJSON,
    CreateMediaRequestModelValuesInnerToJSONTyped,
} from './CreateMediaRequestModelValuesInner';
import type { CreateMediaRequestModelVariantsInner } from './CreateMediaRequestModelVariantsInner';
import {
    CreateMediaRequestModelVariantsInnerFromJSON,
    CreateMediaRequestModelVariantsInnerFromJSONTyped,
    CreateMediaRequestModelVariantsInnerToJSON,
    CreateMediaRequestModelVariantsInnerToJSONTyped,
} from './CreateMediaRequestModelVariantsInner';

/**
 * 
 * @export
 * @interface UpdateMediaRequestModel
 */
export interface UpdateMediaRequestModel {
    /**
     * 
     * @type {Array<CreateMediaRequestModelValuesInner>}
     * @memberof UpdateMediaRequestModel
     */
    values: Array<CreateMediaRequestModelValuesInner>;
    /**
     * 
     * @type {Array<CreateMediaRequestModelVariantsInner>}
     * @memberof UpdateMediaRequestModel
     */
    variants: Array<CreateMediaRequestModelVariantsInner>;
}

/**
 * Check if a given object implements the UpdateMediaRequestModel interface.
 */
export function instanceOfUpdateMediaRequestModel(value: object): value is UpdateMediaRequestModel {
    if (!('values' in value) || value['values'] === undefined) return false;
    if (!('variants' in value) || value['variants'] === undefined) return false;
    return true;
}

export function UpdateMediaRequestModelFromJSON(json: any): UpdateMediaRequestModel {
    return UpdateMediaRequestModelFromJSONTyped(json, false);
}

export function UpdateMediaRequestModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateMediaRequestModel {
    if (json == null) {
        return json;
    }
    return {
        
        'values': ((json['values'] as Array<any>).map(CreateMediaRequestModelValuesInnerFromJSON)),
        'variants': ((json['variants'] as Array<any>).map(CreateMediaRequestModelVariantsInnerFromJSON)),
    };
}

export function UpdateMediaRequestModelToJSON(json: any): UpdateMediaRequestModel {
    return UpdateMediaRequestModelToJSONTyped(json, false);
}

export function UpdateMediaRequestModelToJSONTyped(value?: UpdateMediaRequestModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'values': ((value['values'] as Array<any>).map(CreateMediaRequestModelValuesInnerToJSON)),
        'variants': ((value['variants'] as Array<any>).map(CreateMediaRequestModelVariantsInnerToJSON)),
    };
}

