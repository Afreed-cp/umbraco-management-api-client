/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DocumentTypeCleanupModel } from './DocumentTypeCleanupModel';
import {
    DocumentTypeCleanupModelFromJSON,
    DocumentTypeCleanupModelFromJSONTyped,
    DocumentTypeCleanupModelToJSON,
    DocumentTypeCleanupModelToJSONTyped,
} from './DocumentTypeCleanupModel';
import type { PostUserGroupByIdUsersRequestInner } from './PostUserGroupByIdUsersRequestInner';
import {
    PostUserGroupByIdUsersRequestInnerFromJSON,
    PostUserGroupByIdUsersRequestInnerFromJSONTyped,
    PostUserGroupByIdUsersRequestInnerToJSON,
    PostUserGroupByIdUsersRequestInnerToJSONTyped,
} from './PostUserGroupByIdUsersRequestInner';
import type { CreateDocumentTypeRequestModelPropertiesInner } from './CreateDocumentTypeRequestModelPropertiesInner';
import {
    CreateDocumentTypeRequestModelPropertiesInnerFromJSON,
    CreateDocumentTypeRequestModelPropertiesInnerFromJSONTyped,
    CreateDocumentTypeRequestModelPropertiesInnerToJSON,
    CreateDocumentTypeRequestModelPropertiesInnerToJSONTyped,
} from './CreateDocumentTypeRequestModelPropertiesInner';
import type { CreateDocumentTypeRequestModelContainersInner } from './CreateDocumentTypeRequestModelContainersInner';
import {
    CreateDocumentTypeRequestModelContainersInnerFromJSON,
    CreateDocumentTypeRequestModelContainersInnerFromJSONTyped,
    CreateDocumentTypeRequestModelContainersInnerToJSON,
    CreateDocumentTypeRequestModelContainersInnerToJSONTyped,
} from './CreateDocumentTypeRequestModelContainersInner';
import type { ReferenceByIdModel } from './ReferenceByIdModel';
import {
    ReferenceByIdModelFromJSON,
    ReferenceByIdModelFromJSONTyped,
    ReferenceByIdModelToJSON,
    ReferenceByIdModelToJSONTyped,
} from './ReferenceByIdModel';
import type { CreateDocumentTypeRequestModelAllowedDocumentTypesInner } from './CreateDocumentTypeRequestModelAllowedDocumentTypesInner';
import {
    CreateDocumentTypeRequestModelAllowedDocumentTypesInnerFromJSON,
    CreateDocumentTypeRequestModelAllowedDocumentTypesInnerFromJSONTyped,
    CreateDocumentTypeRequestModelAllowedDocumentTypesInnerToJSON,
    CreateDocumentTypeRequestModelAllowedDocumentTypesInnerToJSONTyped,
} from './CreateDocumentTypeRequestModelAllowedDocumentTypesInner';
import type { CreateDocumentTypeRequestModelCompositionsInner } from './CreateDocumentTypeRequestModelCompositionsInner';
import {
    CreateDocumentTypeRequestModelCompositionsInnerFromJSON,
    CreateDocumentTypeRequestModelCompositionsInnerFromJSONTyped,
    CreateDocumentTypeRequestModelCompositionsInnerToJSON,
    CreateDocumentTypeRequestModelCompositionsInnerToJSONTyped,
} from './CreateDocumentTypeRequestModelCompositionsInner';

/**
 * 
 * @export
 * @interface CreateDocumentTypeRequestModel
 */
export interface CreateDocumentTypeRequestModel {
    /**
     * 
     * @type {string}
     * @memberof CreateDocumentTypeRequestModel
     */
    alias: string;
    /**
     * 
     * @type {string}
     * @memberof CreateDocumentTypeRequestModel
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof CreateDocumentTypeRequestModel
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CreateDocumentTypeRequestModel
     */
    icon: string;
    /**
     * 
     * @type {boolean}
     * @memberof CreateDocumentTypeRequestModel
     */
    allowedAsRoot: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CreateDocumentTypeRequestModel
     */
    variesByCulture: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CreateDocumentTypeRequestModel
     */
    variesBySegment: boolean;
    /**
     * 
     * @type {ReferenceByIdModel}
     * @memberof CreateDocumentTypeRequestModel
     */
    collection?: ReferenceByIdModel | null;
    /**
     * 
     * @type {boolean}
     * @memberof CreateDocumentTypeRequestModel
     */
    isElement: boolean;
    /**
     * 
     * @type {Array<CreateDocumentTypeRequestModelPropertiesInner>}
     * @memberof CreateDocumentTypeRequestModel
     */
    properties: Array<CreateDocumentTypeRequestModelPropertiesInner>;
    /**
     * 
     * @type {Array<CreateDocumentTypeRequestModelContainersInner>}
     * @memberof CreateDocumentTypeRequestModel
     */
    containers: Array<CreateDocumentTypeRequestModelContainersInner>;
    /**
     * 
     * @type {string}
     * @memberof CreateDocumentTypeRequestModel
     */
    id?: string | null;
    /**
     * 
     * @type {ReferenceByIdModel}
     * @memberof CreateDocumentTypeRequestModel
     */
    parent?: ReferenceByIdModel | null;
    /**
     * 
     * @type {Array<PostUserGroupByIdUsersRequestInner>}
     * @memberof CreateDocumentTypeRequestModel
     */
    allowedTemplates: Array<PostUserGroupByIdUsersRequestInner>;
    /**
     * 
     * @type {ReferenceByIdModel}
     * @memberof CreateDocumentTypeRequestModel
     */
    defaultTemplate?: ReferenceByIdModel | null;
    /**
     * 
     * @type {DocumentTypeCleanupModel}
     * @memberof CreateDocumentTypeRequestModel
     */
    cleanup: DocumentTypeCleanupModel;
    /**
     * 
     * @type {Array<CreateDocumentTypeRequestModelAllowedDocumentTypesInner>}
     * @memberof CreateDocumentTypeRequestModel
     */
    allowedDocumentTypes: Array<CreateDocumentTypeRequestModelAllowedDocumentTypesInner>;
    /**
     * 
     * @type {Array<CreateDocumentTypeRequestModelCompositionsInner>}
     * @memberof CreateDocumentTypeRequestModel
     */
    compositions: Array<CreateDocumentTypeRequestModelCompositionsInner>;
}

/**
 * Check if a given object implements the CreateDocumentTypeRequestModel interface.
 */
export function instanceOfCreateDocumentTypeRequestModel(value: object): value is CreateDocumentTypeRequestModel {
    if (!('alias' in value) || value['alias'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('icon' in value) || value['icon'] === undefined) return false;
    if (!('allowedAsRoot' in value) || value['allowedAsRoot'] === undefined) return false;
    if (!('variesByCulture' in value) || value['variesByCulture'] === undefined) return false;
    if (!('variesBySegment' in value) || value['variesBySegment'] === undefined) return false;
    if (!('isElement' in value) || value['isElement'] === undefined) return false;
    if (!('properties' in value) || value['properties'] === undefined) return false;
    if (!('containers' in value) || value['containers'] === undefined) return false;
    if (!('allowedTemplates' in value) || value['allowedTemplates'] === undefined) return false;
    if (!('cleanup' in value) || value['cleanup'] === undefined) return false;
    if (!('allowedDocumentTypes' in value) || value['allowedDocumentTypes'] === undefined) return false;
    if (!('compositions' in value) || value['compositions'] === undefined) return false;
    return true;
}

export function CreateDocumentTypeRequestModelFromJSON(json: any): CreateDocumentTypeRequestModel {
    return CreateDocumentTypeRequestModelFromJSONTyped(json, false);
}

export function CreateDocumentTypeRequestModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateDocumentTypeRequestModel {
    if (json == null) {
        return json;
    }
    return {
        
        'alias': json['alias'],
        'name': json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'icon': json['icon'],
        'allowedAsRoot': json['allowedAsRoot'],
        'variesByCulture': json['variesByCulture'],
        'variesBySegment': json['variesBySegment'],
        'collection': json['collection'] == null ? undefined : ReferenceByIdModelFromJSON(json['collection']),
        'isElement': json['isElement'],
        'properties': ((json['properties'] as Array<any>).map(CreateDocumentTypeRequestModelPropertiesInnerFromJSON)),
        'containers': ((json['containers'] as Array<any>).map(CreateDocumentTypeRequestModelContainersInnerFromJSON)),
        'id': json['id'] == null ? undefined : json['id'],
        'parent': json['parent'] == null ? undefined : ReferenceByIdModelFromJSON(json['parent']),
        'allowedTemplates': ((json['allowedTemplates'] as Array<any>).map(PostUserGroupByIdUsersRequestInnerFromJSON)),
        'defaultTemplate': json['defaultTemplate'] == null ? undefined : ReferenceByIdModelFromJSON(json['defaultTemplate']),
        'cleanup': DocumentTypeCleanupModelFromJSON(json['cleanup']),
        'allowedDocumentTypes': ((json['allowedDocumentTypes'] as Array<any>).map(CreateDocumentTypeRequestModelAllowedDocumentTypesInnerFromJSON)),
        'compositions': ((json['compositions'] as Array<any>).map(CreateDocumentTypeRequestModelCompositionsInnerFromJSON)),
    };
}

export function CreateDocumentTypeRequestModelToJSON(json: any): CreateDocumentTypeRequestModel {
    return CreateDocumentTypeRequestModelToJSONTyped(json, false);
}

export function CreateDocumentTypeRequestModelToJSONTyped(value?: CreateDocumentTypeRequestModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'alias': value['alias'],
        'name': value['name'],
        'description': value['description'],
        'icon': value['icon'],
        'allowedAsRoot': value['allowedAsRoot'],
        'variesByCulture': value['variesByCulture'],
        'variesBySegment': value['variesBySegment'],
        'collection': ReferenceByIdModelToJSON(value['collection']),
        'isElement': value['isElement'],
        'properties': ((value['properties'] as Array<any>).map(CreateDocumentTypeRequestModelPropertiesInnerToJSON)),
        'containers': ((value['containers'] as Array<any>).map(CreateDocumentTypeRequestModelContainersInnerToJSON)),
        'id': value['id'],
        'parent': ReferenceByIdModelToJSON(value['parent']),
        'allowedTemplates': ((value['allowedTemplates'] as Array<any>).map(PostUserGroupByIdUsersRequestInnerToJSON)),
        'defaultTemplate': ReferenceByIdModelToJSON(value['defaultTemplate']),
        'cleanup': DocumentTypeCleanupModelToJSON(value['cleanup']),
        'allowedDocumentTypes': ((value['allowedDocumentTypes'] as Array<any>).map(CreateDocumentTypeRequestModelAllowedDocumentTypesInnerToJSON)),
        'compositions': ((value['compositions'] as Array<any>).map(CreateDocumentTypeRequestModelCompositionsInnerToJSON)),
    };
}

