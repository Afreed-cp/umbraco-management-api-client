/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DomainPresentationModel
 */
export interface DomainPresentationModel {
    /**
     * 
     * @type {string}
     * @memberof DomainPresentationModel
     */
    domainName: string;
    /**
     * 
     * @type {string}
     * @memberof DomainPresentationModel
     */
    isoCode: string;
}

/**
 * Check if a given object implements the DomainPresentationModel interface.
 */
export function instanceOfDomainPresentationModel(value: object): value is DomainPresentationModel {
    if (!('domainName' in value) || value['domainName'] === undefined) return false;
    if (!('isoCode' in value) || value['isoCode'] === undefined) return false;
    return true;
}

export function DomainPresentationModelFromJSON(json: any): DomainPresentationModel {
    return DomainPresentationModelFromJSONTyped(json, false);
}

export function DomainPresentationModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): DomainPresentationModel {
    if (json == null) {
        return json;
    }
    return {
        
        'domainName': json['domainName'],
        'isoCode': json['isoCode'],
    };
}

export function DomainPresentationModelToJSON(json: any): DomainPresentationModel {
    return DomainPresentationModelToJSONTyped(json, false);
}

export function DomainPresentationModelToJSONTyped(value?: DomainPresentationModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'domainName': value['domainName'],
        'isoCode': value['isoCode'],
    };
}

