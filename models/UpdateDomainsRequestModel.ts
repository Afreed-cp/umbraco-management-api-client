/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DomainsResponseModelDomainsInner } from './DomainsResponseModelDomainsInner';
import {
    DomainsResponseModelDomainsInnerFromJSON,
    DomainsResponseModelDomainsInnerFromJSONTyped,
    DomainsResponseModelDomainsInnerToJSON,
    DomainsResponseModelDomainsInnerToJSONTyped,
} from './DomainsResponseModelDomainsInner';

/**
 * 
 * @export
 * @interface UpdateDomainsRequestModel
 */
export interface UpdateDomainsRequestModel {
    /**
     * 
     * @type {string}
     * @memberof UpdateDomainsRequestModel
     */
    defaultIsoCode?: string | null;
    /**
     * 
     * @type {Array<DomainsResponseModelDomainsInner>}
     * @memberof UpdateDomainsRequestModel
     */
    domains: Array<DomainsResponseModelDomainsInner>;
}

/**
 * Check if a given object implements the UpdateDomainsRequestModel interface.
 */
export function instanceOfUpdateDomainsRequestModel(value: object): value is UpdateDomainsRequestModel {
    if (!('domains' in value) || value['domains'] === undefined) return false;
    return true;
}

export function UpdateDomainsRequestModelFromJSON(json: any): UpdateDomainsRequestModel {
    return UpdateDomainsRequestModelFromJSONTyped(json, false);
}

export function UpdateDomainsRequestModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateDomainsRequestModel {
    if (json == null) {
        return json;
    }
    return {
        
        'defaultIsoCode': json['defaultIsoCode'] == null ? undefined : json['defaultIsoCode'],
        'domains': ((json['domains'] as Array<any>).map(DomainsResponseModelDomainsInnerFromJSON)),
    };
}

export function UpdateDomainsRequestModelToJSON(json: any): UpdateDomainsRequestModel {
    return UpdateDomainsRequestModelToJSONTyped(json, false);
}

export function UpdateDomainsRequestModelToJSONTyped(value?: UpdateDomainsRequestModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'defaultIsoCode': value['defaultIsoCode'],
        'domains': ((value['domains'] as Array<any>).map(DomainsResponseModelDomainsInnerToJSON)),
    };
}

