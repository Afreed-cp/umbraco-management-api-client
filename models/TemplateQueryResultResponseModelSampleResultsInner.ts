/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { TemplateQueryResultItemPresentationModel } from './TemplateQueryResultItemPresentationModel';
import {
    instanceOfTemplateQueryResultItemPresentationModel,
    TemplateQueryResultItemPresentationModelFromJSON,
    TemplateQueryResultItemPresentationModelFromJSONTyped,
    TemplateQueryResultItemPresentationModelToJSON,
} from './TemplateQueryResultItemPresentationModel';

/**
 * @type TemplateQueryResultResponseModelSampleResultsInner
 * 
 * @export
 */
export type TemplateQueryResultResponseModelSampleResultsInner = TemplateQueryResultItemPresentationModel;

export function TemplateQueryResultResponseModelSampleResultsInnerFromJSON(json: any): TemplateQueryResultResponseModelSampleResultsInner {
    return TemplateQueryResultResponseModelSampleResultsInnerFromJSONTyped(json, false);
}

export function TemplateQueryResultResponseModelSampleResultsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): TemplateQueryResultResponseModelSampleResultsInner {
    if (json == null) {
        return json;
    }
    if (typeof json !== 'object') {
        return json;
    }
    if (instanceOfTemplateQueryResultItemPresentationModel(json)) {
        return TemplateQueryResultItemPresentationModelFromJSONTyped(json, true);
    }

    return {} as any;
}

export function TemplateQueryResultResponseModelSampleResultsInnerToJSON(json: any): any {
    return TemplateQueryResultResponseModelSampleResultsInnerToJSONTyped(json, false);
}

export function TemplateQueryResultResponseModelSampleResultsInnerToJSONTyped(value?: TemplateQueryResultResponseModelSampleResultsInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    if (typeof value !== 'object') {
        return value;
    }
    if (instanceOfTemplateQueryResultItemPresentationModel(value)) {
        return TemplateQueryResultItemPresentationModelToJSON(value as TemplateQueryResultItemPresentationModel);
    }

    return {};
}

