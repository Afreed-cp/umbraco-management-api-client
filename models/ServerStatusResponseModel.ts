/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RuntimeLevelModel } from './RuntimeLevelModel';
import {
    RuntimeLevelModelFromJSON,
    RuntimeLevelModelFromJSONTyped,
    RuntimeLevelModelToJSON,
    RuntimeLevelModelToJSONTyped,
} from './RuntimeLevelModel';

/**
 * 
 * @export
 * @interface ServerStatusResponseModel
 */
export interface ServerStatusResponseModel {
    /**
     * 
     * @type {RuntimeLevelModel}
     * @memberof ServerStatusResponseModel
     */
    serverStatus: RuntimeLevelModel;
}



/**
 * Check if a given object implements the ServerStatusResponseModel interface.
 */
export function instanceOfServerStatusResponseModel(value: object): value is ServerStatusResponseModel {
    if (!('serverStatus' in value) || value['serverStatus'] === undefined) return false;
    return true;
}

export function ServerStatusResponseModelFromJSON(json: any): ServerStatusResponseModel {
    return ServerStatusResponseModelFromJSONTyped(json, false);
}

export function ServerStatusResponseModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ServerStatusResponseModel {
    if (json == null) {
        return json;
    }
    return {
        
        'serverStatus': RuntimeLevelModelFromJSON(json['serverStatus']),
    };
}

export function ServerStatusResponseModelToJSON(json: any): ServerStatusResponseModel {
    return ServerStatusResponseModelToJSONTyped(json, false);
}

export function ServerStatusResponseModelToJSONTyped(value?: ServerStatusResponseModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'serverStatus': RuntimeLevelModelToJSON(value['serverStatus']),
    };
}

