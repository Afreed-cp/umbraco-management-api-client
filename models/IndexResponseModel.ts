/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { HealthStatusResponseModel } from './HealthStatusResponseModel';
import {
    HealthStatusResponseModelFromJSON,
    HealthStatusResponseModelFromJSONTyped,
    HealthStatusResponseModelToJSON,
    HealthStatusResponseModelToJSONTyped,
} from './HealthStatusResponseModel';

/**
 * 
 * @export
 * @interface IndexResponseModel
 */
export interface IndexResponseModel {
    /**
     * 
     * @type {string}
     * @memberof IndexResponseModel
     */
    name: string;
    /**
     * 
     * @type {HealthStatusResponseModel}
     * @memberof IndexResponseModel
     */
    healthStatus: HealthStatusResponseModel;
    /**
     * 
     * @type {boolean}
     * @memberof IndexResponseModel
     */
    canRebuild: boolean;
    /**
     * 
     * @type {string}
     * @memberof IndexResponseModel
     */
    searcherName: string;
    /**
     * 
     * @type {number}
     * @memberof IndexResponseModel
     */
    documentCount: number;
    /**
     * 
     * @type {number}
     * @memberof IndexResponseModel
     */
    fieldCount: number;
    /**
     * 
     * @type {{ [key: string]: any | null; }}
     * @memberof IndexResponseModel
     */
    providerProperties?: { [key: string]: any | null; } | null;
}

/**
 * Check if a given object implements the IndexResponseModel interface.
 */
export function instanceOfIndexResponseModel(value: object): value is IndexResponseModel {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('healthStatus' in value) || value['healthStatus'] === undefined) return false;
    if (!('canRebuild' in value) || value['canRebuild'] === undefined) return false;
    if (!('searcherName' in value) || value['searcherName'] === undefined) return false;
    if (!('documentCount' in value) || value['documentCount'] === undefined) return false;
    if (!('fieldCount' in value) || value['fieldCount'] === undefined) return false;
    return true;
}

export function IndexResponseModelFromJSON(json: any): IndexResponseModel {
    return IndexResponseModelFromJSONTyped(json, false);
}

export function IndexResponseModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): IndexResponseModel {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'healthStatus': HealthStatusResponseModelFromJSON(json['healthStatus']),
        'canRebuild': json['canRebuild'],
        'searcherName': json['searcherName'],
        'documentCount': json['documentCount'],
        'fieldCount': json['fieldCount'],
        'providerProperties': json['providerProperties'] == null ? undefined : json['providerProperties'],
    };
}

export function IndexResponseModelToJSON(json: any): IndexResponseModel {
    return IndexResponseModelToJSONTyped(json, false);
}

export function IndexResponseModelToJSONTyped(value?: IndexResponseModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'healthStatus': HealthStatusResponseModelToJSON(value['healthStatus']),
        'canRebuild': value['canRebuild'],
        'searcherName': value['searcherName'],
        'documentCount': value['documentCount'],
        'fieldCount': value['fieldCount'],
        'providerProperties': value['providerProperties'],
    };
}

