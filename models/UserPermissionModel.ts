/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserPermissionModel
 */
export interface UserPermissionModel {
    /**
     * 
     * @type {string}
     * @memberof UserPermissionModel
     */
    nodeKey: string;
    /**
     * 
     * @type {Set<string>}
     * @memberof UserPermissionModel
     */
    permissions: Set<string>;
}

/**
 * Check if a given object implements the UserPermissionModel interface.
 */
export function instanceOfUserPermissionModel(value: object): value is UserPermissionModel {
    if (!('nodeKey' in value) || value['nodeKey'] === undefined) return false;
    if (!('permissions' in value) || value['permissions'] === undefined) return false;
    return true;
}

export function UserPermissionModelFromJSON(json: any): UserPermissionModel {
    return UserPermissionModelFromJSONTyped(json, false);
}

export function UserPermissionModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserPermissionModel {
    if (json == null) {
        return json;
    }
    return {
        
        'nodeKey': json['nodeKey'],
        'permissions': new Set(json['permissions']),
    };
}

export function UserPermissionModelToJSON(json: any): UserPermissionModel {
    return UserPermissionModelToJSONTyped(json, false);
}

export function UserPermissionModelToJSONTyped(value?: UserPermissionModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'nodeKey': value['nodeKey'],
        'permissions': Array.from(value['permissions'] as Set<any>),
    };
}

