/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ReferenceByIdModel } from './ReferenceByIdModel';
import {
    ReferenceByIdModelFromJSON,
    ReferenceByIdModelFromJSONTyped,
    ReferenceByIdModelToJSON,
    ReferenceByIdModelToJSONTyped,
} from './ReferenceByIdModel';

/**
 * 
 * @export
 * @interface MoveDocumentRequestModel
 */
export interface MoveDocumentRequestModel {
    /**
     * 
     * @type {ReferenceByIdModel}
     * @memberof MoveDocumentRequestModel
     */
    target?: ReferenceByIdModel | null;
}

/**
 * Check if a given object implements the MoveDocumentRequestModel interface.
 */
export function instanceOfMoveDocumentRequestModel(value: object): value is MoveDocumentRequestModel {
    return true;
}

export function MoveDocumentRequestModelFromJSON(json: any): MoveDocumentRequestModel {
    return MoveDocumentRequestModelFromJSONTyped(json, false);
}

export function MoveDocumentRequestModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): MoveDocumentRequestModel {
    if (json == null) {
        return json;
    }
    return {
        
        'target': json['target'] == null ? undefined : ReferenceByIdModelFromJSON(json['target']),
    };
}

export function MoveDocumentRequestModelToJSON(json: any): MoveDocumentRequestModel {
    return MoveDocumentRequestModelToJSONTyped(json, false);
}

export function MoveDocumentRequestModelToJSONTyped(value?: MoveDocumentRequestModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'target': ReferenceByIdModelToJSON(value['target']),
    };
}

