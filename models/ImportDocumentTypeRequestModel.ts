/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ReferenceByIdModel } from './ReferenceByIdModel';
import {
    ReferenceByIdModelFromJSON,
    ReferenceByIdModelFromJSONTyped,
    ReferenceByIdModelToJSON,
    ReferenceByIdModelToJSONTyped,
} from './ReferenceByIdModel';

/**
 * 
 * @export
 * @interface ImportDocumentTypeRequestModel
 */
export interface ImportDocumentTypeRequestModel {
    /**
     * 
     * @type {ReferenceByIdModel}
     * @memberof ImportDocumentTypeRequestModel
     */
    file: ReferenceByIdModel;
}

/**
 * Check if a given object implements the ImportDocumentTypeRequestModel interface.
 */
export function instanceOfImportDocumentTypeRequestModel(value: object): value is ImportDocumentTypeRequestModel {
    if (!('file' in value) || value['file'] === undefined) return false;
    return true;
}

export function ImportDocumentTypeRequestModelFromJSON(json: any): ImportDocumentTypeRequestModel {
    return ImportDocumentTypeRequestModelFromJSONTyped(json, false);
}

export function ImportDocumentTypeRequestModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImportDocumentTypeRequestModel {
    if (json == null) {
        return json;
    }
    return {
        
        'file': ReferenceByIdModelFromJSON(json['file']),
    };
}

export function ImportDocumentTypeRequestModelToJSON(json: any): ImportDocumentTypeRequestModel {
    return ImportDocumentTypeRequestModelToJSONTyped(json, false);
}

export function ImportDocumentTypeRequestModelToJSONTyped(value?: ImportDocumentTypeRequestModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'file': ReferenceByIdModelToJSON(value['file']),
    };
}

