/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MediaTypeConfigurationResponseModel
 */
export interface MediaTypeConfigurationResponseModel {
    /**
     * 
     * @type {Set<string>}
     * @memberof MediaTypeConfigurationResponseModel
     */
    reservedFieldNames: Set<string>;
}

/**
 * Check if a given object implements the MediaTypeConfigurationResponseModel interface.
 */
export function instanceOfMediaTypeConfigurationResponseModel(value: object): value is MediaTypeConfigurationResponseModel {
    if (!('reservedFieldNames' in value) || value['reservedFieldNames'] === undefined) return false;
    return true;
}

export function MediaTypeConfigurationResponseModelFromJSON(json: any): MediaTypeConfigurationResponseModel {
    return MediaTypeConfigurationResponseModelFromJSONTyped(json, false);
}

export function MediaTypeConfigurationResponseModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): MediaTypeConfigurationResponseModel {
    if (json == null) {
        return json;
    }
    return {
        
        'reservedFieldNames': new Set(json['reservedFieldNames']),
    };
}

export function MediaTypeConfigurationResponseModelToJSON(json: any): MediaTypeConfigurationResponseModel {
    return MediaTypeConfigurationResponseModelToJSONTyped(json, false);
}

export function MediaTypeConfigurationResponseModelToJSONTyped(value?: MediaTypeConfigurationResponseModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'reservedFieldNames': Array.from(value['reservedFieldNames'] as Set<any>),
    };
}

