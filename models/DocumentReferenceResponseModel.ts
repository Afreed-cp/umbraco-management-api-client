/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DocumentItemResponseModelVariantsInner } from './DocumentItemResponseModelVariantsInner';
import {
    DocumentItemResponseModelVariantsInnerFromJSON,
    DocumentItemResponseModelVariantsInnerFromJSONTyped,
    DocumentItemResponseModelVariantsInnerToJSON,
    DocumentItemResponseModelVariantsInnerToJSONTyped,
} from './DocumentItemResponseModelVariantsInner';
import type { TrackedReferenceDocumentTypeModel } from './TrackedReferenceDocumentTypeModel';
import {
    TrackedReferenceDocumentTypeModelFromJSON,
    TrackedReferenceDocumentTypeModelFromJSONTyped,
    TrackedReferenceDocumentTypeModelToJSON,
    TrackedReferenceDocumentTypeModelToJSONTyped,
} from './TrackedReferenceDocumentTypeModel';

// import { DocumentReferenceResponseModel, DocumentReferenceResponseModelFromJSONTyped, DocumentReferenceResponseModelToJSON, DocumentReferenceResponseModelToJSONTyped } from './DocumentReferenceResponseModel';
/**
 * 
 * @export
 * @interface DocumentReferenceResponseModel
 */
export interface DocumentReferenceResponseModel {
    /**
     * 
     * @type {string}
     * @memberof DocumentReferenceResponseModel
     */
    $type: string;
    /**
     * 
     * @type {string}
     * @memberof DocumentReferenceResponseModel
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof DocumentReferenceResponseModel
     */
    name?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof DocumentReferenceResponseModel
     */
    published?: boolean | null;
    /**
     * 
     * @type {TrackedReferenceDocumentTypeModel}
     * @memberof DocumentReferenceResponseModel
     */
    documentType: TrackedReferenceDocumentTypeModel;
    /**
     * 
     * @type {Array<DocumentItemResponseModelVariantsInner>}
     * @memberof DocumentReferenceResponseModel
     */
    variants: Array<DocumentItemResponseModelVariantsInner>;
}

/**
 * Check if a given object implements the DocumentReferenceResponseModel interface.
 */
export function instanceOfDocumentReferenceResponseModel(value: object): value is DocumentReferenceResponseModel {
    if (!('$type' in value) || value['$type'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('documentType' in value) || value['documentType'] === undefined) return false;
    if (!('variants' in value) || value['variants'] === undefined) return false;
    return true;
}

export function DocumentReferenceResponseModelFromJSON(json: any): DocumentReferenceResponseModel {
    return DocumentReferenceResponseModelFromJSONTyped(json, false);
}

export function DocumentReferenceResponseModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): DocumentReferenceResponseModel {
    if (json == null) {
        return json;
    }
    if (!ignoreDiscriminator) {
        if (json['$type'] === 'DocumentReferenceResponseModel') {
            return DocumentReferenceResponseModelFromJSONTyped(json, ignoreDiscriminator);
        }
    }
    return {
        
        '$type': json['$type'],
        'id': json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'published': json['published'] == null ? undefined : json['published'],
        'documentType': TrackedReferenceDocumentTypeModelFromJSON(json['documentType']),
        'variants': ((json['variants'] as Array<any>).map(DocumentItemResponseModelVariantsInnerFromJSON)),
    };
}

export function DocumentReferenceResponseModelToJSON(json: any): DocumentReferenceResponseModel {
    return DocumentReferenceResponseModelToJSONTyped(json, false);
}

export function DocumentReferenceResponseModelToJSONTyped(value?: DocumentReferenceResponseModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    if (!ignoreDiscriminator) {
        switch (value['$type']) {
            case 'DocumentReferenceResponseModel':
                return DocumentReferenceResponseModelToJSONTyped(value as DocumentReferenceResponseModel, ignoreDiscriminator);
            default:
                return value;
        }
    }

    return {
        
        '$type': value['$type'],
        'id': value['id'],
        'name': value['name'],
        'published': value['published'],
        'documentType': TrackedReferenceDocumentTypeModelToJSON(value['documentType']),
        'variants': ((value['variants'] as Array<any>).map(DocumentItemResponseModelVariantsInnerToJSON)),
    };
}

