/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface LogLevelCountsReponseModel
 */
export interface LogLevelCountsReponseModel {
    /**
     * 
     * @type {number}
     * @memberof LogLevelCountsReponseModel
     */
    information: number;
    /**
     * 
     * @type {number}
     * @memberof LogLevelCountsReponseModel
     */
    debug: number;
    /**
     * 
     * @type {number}
     * @memberof LogLevelCountsReponseModel
     */
    warning: number;
    /**
     * 
     * @type {number}
     * @memberof LogLevelCountsReponseModel
     */
    error: number;
    /**
     * 
     * @type {number}
     * @memberof LogLevelCountsReponseModel
     */
    fatal: number;
}

/**
 * Check if a given object implements the LogLevelCountsReponseModel interface.
 */
export function instanceOfLogLevelCountsReponseModel(value: object): value is LogLevelCountsReponseModel {
    if (!('information' in value) || value['information'] === undefined) return false;
    if (!('debug' in value) || value['debug'] === undefined) return false;
    if (!('warning' in value) || value['warning'] === undefined) return false;
    if (!('error' in value) || value['error'] === undefined) return false;
    if (!('fatal' in value) || value['fatal'] === undefined) return false;
    return true;
}

export function LogLevelCountsReponseModelFromJSON(json: any): LogLevelCountsReponseModel {
    return LogLevelCountsReponseModelFromJSONTyped(json, false);
}

export function LogLevelCountsReponseModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): LogLevelCountsReponseModel {
    if (json == null) {
        return json;
    }
    return {
        
        'information': json['information'],
        'debug': json['debug'],
        'warning': json['warning'],
        'error': json['error'],
        'fatal': json['fatal'],
    };
}

export function LogLevelCountsReponseModelToJSON(json: any): LogLevelCountsReponseModel {
    return LogLevelCountsReponseModelToJSONTyped(json, false);
}

export function LogLevelCountsReponseModelToJSONTyped(value?: LogLevelCountsReponseModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'information': value['information'],
        'debug': value['debug'],
        'warning': value['warning'],
        'error': value['error'],
        'fatal': value['fatal'],
    };
}

