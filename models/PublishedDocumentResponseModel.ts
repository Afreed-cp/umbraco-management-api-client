/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DocumentBlueprintResponseModelVariantsInner } from './DocumentBlueprintResponseModelVariantsInner';
import {
    DocumentBlueprintResponseModelVariantsInnerFromJSON,
    DocumentBlueprintResponseModelVariantsInnerFromJSONTyped,
    DocumentBlueprintResponseModelVariantsInnerToJSON,
    DocumentBlueprintResponseModelVariantsInnerToJSONTyped,
} from './DocumentBlueprintResponseModelVariantsInner';
import type { DocumentTypeReferenceResponseModel } from './DocumentTypeReferenceResponseModel';
import {
    DocumentTypeReferenceResponseModelFromJSON,
    DocumentTypeReferenceResponseModelFromJSONTyped,
    DocumentTypeReferenceResponseModelToJSON,
    DocumentTypeReferenceResponseModelToJSONTyped,
} from './DocumentTypeReferenceResponseModel';
import type { DocumentBlueprintResponseModelValuesInner } from './DocumentBlueprintResponseModelValuesInner';
import {
    DocumentBlueprintResponseModelValuesInnerFromJSON,
    DocumentBlueprintResponseModelValuesInnerFromJSONTyped,
    DocumentBlueprintResponseModelValuesInnerToJSON,
    DocumentBlueprintResponseModelValuesInnerToJSONTyped,
} from './DocumentBlueprintResponseModelValuesInner';
import type { DocumentResponseModelUrlsInner } from './DocumentResponseModelUrlsInner';
import {
    DocumentResponseModelUrlsInnerFromJSON,
    DocumentResponseModelUrlsInnerFromJSONTyped,
    DocumentResponseModelUrlsInnerToJSON,
    DocumentResponseModelUrlsInnerToJSONTyped,
} from './DocumentResponseModelUrlsInner';
import type { ReferenceByIdModel } from './ReferenceByIdModel';
import {
    ReferenceByIdModelFromJSON,
    ReferenceByIdModelFromJSONTyped,
    ReferenceByIdModelToJSON,
    ReferenceByIdModelToJSONTyped,
} from './ReferenceByIdModel';

/**
 * 
 * @export
 * @interface PublishedDocumentResponseModel
 */
export interface PublishedDocumentResponseModel {
    /**
     * 
     * @type {Array<DocumentBlueprintResponseModelValuesInner>}
     * @memberof PublishedDocumentResponseModel
     */
    values: Array<DocumentBlueprintResponseModelValuesInner>;
    /**
     * 
     * @type {Array<DocumentBlueprintResponseModelVariantsInner>}
     * @memberof PublishedDocumentResponseModel
     */
    variants: Array<DocumentBlueprintResponseModelVariantsInner>;
    /**
     * 
     * @type {string}
     * @memberof PublishedDocumentResponseModel
     */
    id: string;
    /**
     * 
     * @type {DocumentTypeReferenceResponseModel}
     * @memberof PublishedDocumentResponseModel
     */
    documentType: DocumentTypeReferenceResponseModel;
    /**
     * 
     * @type {Array<DocumentResponseModelUrlsInner>}
     * @memberof PublishedDocumentResponseModel
     * @deprecated
     */
    urls: Array<DocumentResponseModelUrlsInner>;
    /**
     * 
     * @type {ReferenceByIdModel}
     * @memberof PublishedDocumentResponseModel
     */
    template?: ReferenceByIdModel | null;
    /**
     * 
     * @type {boolean}
     * @memberof PublishedDocumentResponseModel
     */
    isTrashed: boolean;
}

/**
 * Check if a given object implements the PublishedDocumentResponseModel interface.
 */
export function instanceOfPublishedDocumentResponseModel(value: object): value is PublishedDocumentResponseModel {
    if (!('values' in value) || value['values'] === undefined) return false;
    if (!('variants' in value) || value['variants'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('documentType' in value) || value['documentType'] === undefined) return false;
    if (!('urls' in value) || value['urls'] === undefined) return false;
    if (!('isTrashed' in value) || value['isTrashed'] === undefined) return false;
    return true;
}

export function PublishedDocumentResponseModelFromJSON(json: any): PublishedDocumentResponseModel {
    return PublishedDocumentResponseModelFromJSONTyped(json, false);
}

export function PublishedDocumentResponseModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): PublishedDocumentResponseModel {
    if (json == null) {
        return json;
    }
    return {
        
        'values': ((json['values'] as Array<any>).map(DocumentBlueprintResponseModelValuesInnerFromJSON)),
        'variants': ((json['variants'] as Array<any>).map(DocumentBlueprintResponseModelVariantsInnerFromJSON)),
        'id': json['id'],
        'documentType': DocumentTypeReferenceResponseModelFromJSON(json['documentType']),
        'urls': ((json['urls'] as Array<any>).map(DocumentResponseModelUrlsInnerFromJSON)),
        'template': json['template'] == null ? undefined : ReferenceByIdModelFromJSON(json['template']),
        'isTrashed': json['isTrashed'],
    };
}

export function PublishedDocumentResponseModelToJSON(json: any): PublishedDocumentResponseModel {
    return PublishedDocumentResponseModelToJSONTyped(json, false);
}

export function PublishedDocumentResponseModelToJSONTyped(value?: PublishedDocumentResponseModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'values': ((value['values'] as Array<any>).map(DocumentBlueprintResponseModelValuesInnerToJSON)),
        'variants': ((value['variants'] as Array<any>).map(DocumentBlueprintResponseModelVariantsInnerToJSON)),
        'id': value['id'],
        'documentType': DocumentTypeReferenceResponseModelToJSON(value['documentType']),
        'urls': ((value['urls'] as Array<any>).map(DocumentResponseModelUrlsInnerToJSON)),
        'template': ReferenceByIdModelToJSON(value['template']),
        'isTrashed': value['isTrashed'],
    };
}

