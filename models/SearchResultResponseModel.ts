/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SearchResultResponseModelFieldsInner } from './SearchResultResponseModelFieldsInner';
import {
    SearchResultResponseModelFieldsInnerFromJSON,
    SearchResultResponseModelFieldsInnerFromJSONTyped,
    SearchResultResponseModelFieldsInnerToJSON,
    SearchResultResponseModelFieldsInnerToJSONTyped,
} from './SearchResultResponseModelFieldsInner';

/**
 * 
 * @export
 * @interface SearchResultResponseModel
 */
export interface SearchResultResponseModel {
    /**
     * 
     * @type {string}
     * @memberof SearchResultResponseModel
     */
    id: string;
    /**
     * 
     * @type {number}
     * @memberof SearchResultResponseModel
     */
    score: number;
    /**
     * 
     * @type {number}
     * @memberof SearchResultResponseModel
     */
    readonly fieldCount: number;
    /**
     * 
     * @type {Array<SearchResultResponseModelFieldsInner>}
     * @memberof SearchResultResponseModel
     */
    fields: Array<SearchResultResponseModelFieldsInner>;
}

/**
 * Check if a given object implements the SearchResultResponseModel interface.
 */
export function instanceOfSearchResultResponseModel(value: object): value is SearchResultResponseModel {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('score' in value) || value['score'] === undefined) return false;
    if (!('fieldCount' in value) || value['fieldCount'] === undefined) return false;
    if (!('fields' in value) || value['fields'] === undefined) return false;
    return true;
}

export function SearchResultResponseModelFromJSON(json: any): SearchResultResponseModel {
    return SearchResultResponseModelFromJSONTyped(json, false);
}

export function SearchResultResponseModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchResultResponseModel {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'score': json['score'],
        'fieldCount': json['fieldCount'],
        'fields': ((json['fields'] as Array<any>).map(SearchResultResponseModelFieldsInnerFromJSON)),
    };
}

export function SearchResultResponseModelToJSON(json: any): SearchResultResponseModel {
    return SearchResultResponseModelToJSONTyped(json, false);
}

export function SearchResultResponseModelToJSONTyped(value?: Omit<SearchResultResponseModel, 'fieldCount'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'score': value['score'],
        'fields': ((value['fields'] as Array<any>).map(SearchResultResponseModelFieldsInnerToJSON)),
    };
}

