/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ReferenceByIdModel } from './ReferenceByIdModel';
import {
    ReferenceByIdModelFromJSON,
    ReferenceByIdModelFromJSONTyped,
    ReferenceByIdModelToJSON,
    ReferenceByIdModelToJSONTyped,
} from './ReferenceByIdModel';

/**
 * 
 * @export
 * @interface RedirectUrlResponseModel
 */
export interface RedirectUrlResponseModel {
    /**
     * 
     * @type {string}
     * @memberof RedirectUrlResponseModel
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof RedirectUrlResponseModel
     */
    originalUrl: string;
    /**
     * 
     * @type {string}
     * @memberof RedirectUrlResponseModel
     */
    destinationUrl: string;
    /**
     * 
     * @type {Date}
     * @memberof RedirectUrlResponseModel
     */
    created: Date;
    /**
     * 
     * @type {ReferenceByIdModel}
     * @memberof RedirectUrlResponseModel
     */
    document: ReferenceByIdModel;
    /**
     * 
     * @type {string}
     * @memberof RedirectUrlResponseModel
     */
    culture?: string | null;
}

/**
 * Check if a given object implements the RedirectUrlResponseModel interface.
 */
export function instanceOfRedirectUrlResponseModel(value: object): value is RedirectUrlResponseModel {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('originalUrl' in value) || value['originalUrl'] === undefined) return false;
    if (!('destinationUrl' in value) || value['destinationUrl'] === undefined) return false;
    if (!('created' in value) || value['created'] === undefined) return false;
    if (!('document' in value) || value['document'] === undefined) return false;
    return true;
}

export function RedirectUrlResponseModelFromJSON(json: any): RedirectUrlResponseModel {
    return RedirectUrlResponseModelFromJSONTyped(json, false);
}

export function RedirectUrlResponseModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): RedirectUrlResponseModel {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'originalUrl': json['originalUrl'],
        'destinationUrl': json['destinationUrl'],
        'created': (new Date(json['created'])),
        'document': ReferenceByIdModelFromJSON(json['document']),
        'culture': json['culture'] == null ? undefined : json['culture'],
    };
}

export function RedirectUrlResponseModelToJSON(json: any): RedirectUrlResponseModel {
    return RedirectUrlResponseModelToJSONTyped(json, false);
}

export function RedirectUrlResponseModelToJSONTyped(value?: RedirectUrlResponseModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'originalUrl': value['originalUrl'],
        'destinationUrl': value['destinationUrl'],
        'created': ((value['created']).toISOString()),
        'document': ReferenceByIdModelToJSON(value['document']),
        'culture': value['culture'],
    };
}

