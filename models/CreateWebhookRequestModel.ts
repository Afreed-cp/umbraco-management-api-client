/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateWebhookRequestModel
 */
export interface CreateWebhookRequestModel {
    /**
     * 
     * @type {boolean}
     * @memberof CreateWebhookRequestModel
     */
    enabled: boolean;
    /**
     * 
     * @type {string}
     * @memberof CreateWebhookRequestModel
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CreateWebhookRequestModel
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CreateWebhookRequestModel
     */
    url: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof CreateWebhookRequestModel
     */
    contentTypeKeys: Array<string>;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof CreateWebhookRequestModel
     */
    headers: { [key: string]: string; };
    /**
     * 
     * @type {string}
     * @memberof CreateWebhookRequestModel
     */
    id?: string | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof CreateWebhookRequestModel
     */
    events: Array<string>;
}

/**
 * Check if a given object implements the CreateWebhookRequestModel interface.
 */
export function instanceOfCreateWebhookRequestModel(value: object): value is CreateWebhookRequestModel {
    if (!('enabled' in value) || value['enabled'] === undefined) return false;
    if (!('url' in value) || value['url'] === undefined) return false;
    if (!('contentTypeKeys' in value) || value['contentTypeKeys'] === undefined) return false;
    if (!('headers' in value) || value['headers'] === undefined) return false;
    if (!('events' in value) || value['events'] === undefined) return false;
    return true;
}

export function CreateWebhookRequestModelFromJSON(json: any): CreateWebhookRequestModel {
    return CreateWebhookRequestModelFromJSONTyped(json, false);
}

export function CreateWebhookRequestModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateWebhookRequestModel {
    if (json == null) {
        return json;
    }
    return {
        
        'enabled': json['enabled'],
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'url': json['url'],
        'contentTypeKeys': json['contentTypeKeys'],
        'headers': json['headers'],
        'id': json['id'] == null ? undefined : json['id'],
        'events': json['events'],
    };
}

export function CreateWebhookRequestModelToJSON(json: any): CreateWebhookRequestModel {
    return CreateWebhookRequestModelToJSONTyped(json, false);
}

export function CreateWebhookRequestModelToJSONTyped(value?: CreateWebhookRequestModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'enabled': value['enabled'],
        'name': value['name'],
        'description': value['description'],
        'url': value['url'],
        'contentTypeKeys': value['contentTypeKeys'],
        'headers': value['headers'],
        'id': value['id'],
        'events': value['events'],
    };
}

