/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { MediaTypePropertyTypeResponseModel } from './MediaTypePropertyTypeResponseModel';
import {
    instanceOfMediaTypePropertyTypeResponseModel,
    MediaTypePropertyTypeResponseModelFromJSON,
    MediaTypePropertyTypeResponseModelFromJSONTyped,
    MediaTypePropertyTypeResponseModelToJSON,
} from './MediaTypePropertyTypeResponseModel';

/**
 * @type MediaTypeResponseModelPropertiesInner
 * 
 * @export
 */
export type MediaTypeResponseModelPropertiesInner = MediaTypePropertyTypeResponseModel;

export function MediaTypeResponseModelPropertiesInnerFromJSON(json: any): MediaTypeResponseModelPropertiesInner {
    return MediaTypeResponseModelPropertiesInnerFromJSONTyped(json, false);
}

export function MediaTypeResponseModelPropertiesInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): MediaTypeResponseModelPropertiesInner {
    if (json == null) {
        return json;
    }
    if (typeof json !== 'object') {
        return json;
    }
    if (instanceOfMediaTypePropertyTypeResponseModel(json)) {
        return MediaTypePropertyTypeResponseModelFromJSONTyped(json, true);
    }

    return {} as any;
}

export function MediaTypeResponseModelPropertiesInnerToJSON(json: any): any {
    return MediaTypeResponseModelPropertiesInnerToJSONTyped(json, false);
}

export function MediaTypeResponseModelPropertiesInnerToJSONTyped(value?: MediaTypeResponseModelPropertiesInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    if (typeof value !== 'object') {
        return value;
    }
    if (instanceOfMediaTypePropertyTypeResponseModel(value)) {
        return MediaTypePropertyTypeResponseModelToJSON(value as MediaTypePropertyTypeResponseModel);
    }

    return {};
}

