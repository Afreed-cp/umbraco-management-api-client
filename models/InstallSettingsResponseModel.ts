/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserSettingsPresentationModel } from './UserSettingsPresentationModel';
import {
    UserSettingsPresentationModelFromJSON,
    UserSettingsPresentationModelFromJSONTyped,
    UserSettingsPresentationModelToJSON,
    UserSettingsPresentationModelToJSONTyped,
} from './UserSettingsPresentationModel';
import type { InstallSettingsResponseModelDatabasesInner } from './InstallSettingsResponseModelDatabasesInner';
import {
    InstallSettingsResponseModelDatabasesInnerFromJSON,
    InstallSettingsResponseModelDatabasesInnerFromJSONTyped,
    InstallSettingsResponseModelDatabasesInnerToJSON,
    InstallSettingsResponseModelDatabasesInnerToJSONTyped,
} from './InstallSettingsResponseModelDatabasesInner';

/**
 * 
 * @export
 * @interface InstallSettingsResponseModel
 */
export interface InstallSettingsResponseModel {
    /**
     * 
     * @type {UserSettingsPresentationModel}
     * @memberof InstallSettingsResponseModel
     */
    user: UserSettingsPresentationModel;
    /**
     * 
     * @type {Array<InstallSettingsResponseModelDatabasesInner>}
     * @memberof InstallSettingsResponseModel
     */
    databases: Array<InstallSettingsResponseModelDatabasesInner>;
}

/**
 * Check if a given object implements the InstallSettingsResponseModel interface.
 */
export function instanceOfInstallSettingsResponseModel(value: object): value is InstallSettingsResponseModel {
    if (!('user' in value) || value['user'] === undefined) return false;
    if (!('databases' in value) || value['databases'] === undefined) return false;
    return true;
}

export function InstallSettingsResponseModelFromJSON(json: any): InstallSettingsResponseModel {
    return InstallSettingsResponseModelFromJSONTyped(json, false);
}

export function InstallSettingsResponseModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): InstallSettingsResponseModel {
    if (json == null) {
        return json;
    }
    return {
        
        'user': UserSettingsPresentationModelFromJSON(json['user']),
        'databases': ((json['databases'] as Array<any>).map(InstallSettingsResponseModelDatabasesInnerFromJSON)),
    };
}

export function InstallSettingsResponseModelToJSON(json: any): InstallSettingsResponseModel {
    return InstallSettingsResponseModelToJSONTyped(json, false);
}

export function InstallSettingsResponseModelToJSONTyped(value?: InstallSettingsResponseModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'user': UserSettingsPresentationModelToJSON(value['user']),
        'databases': ((value['databases'] as Array<any>).map(InstallSettingsResponseModelDatabasesInnerToJSON)),
    };
}

