/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpgradeSettingsResponseModel
 */
export interface UpgradeSettingsResponseModel {
    /**
     * 
     * @type {string}
     * @memberof UpgradeSettingsResponseModel
     */
    currentState: string;
    /**
     * 
     * @type {string}
     * @memberof UpgradeSettingsResponseModel
     */
    newState: string;
    /**
     * 
     * @type {string}
     * @memberof UpgradeSettingsResponseModel
     */
    newVersion: string;
    /**
     * 
     * @type {string}
     * @memberof UpgradeSettingsResponseModel
     */
    oldVersion: string;
    /**
     * 
     * @type {string}
     * @memberof UpgradeSettingsResponseModel
     */
    readonly reportUrl: string;
}

/**
 * Check if a given object implements the UpgradeSettingsResponseModel interface.
 */
export function instanceOfUpgradeSettingsResponseModel(value: object): value is UpgradeSettingsResponseModel {
    if (!('currentState' in value) || value['currentState'] === undefined) return false;
    if (!('newState' in value) || value['newState'] === undefined) return false;
    if (!('newVersion' in value) || value['newVersion'] === undefined) return false;
    if (!('oldVersion' in value) || value['oldVersion'] === undefined) return false;
    if (!('reportUrl' in value) || value['reportUrl'] === undefined) return false;
    return true;
}

export function UpgradeSettingsResponseModelFromJSON(json: any): UpgradeSettingsResponseModel {
    return UpgradeSettingsResponseModelFromJSONTyped(json, false);
}

export function UpgradeSettingsResponseModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpgradeSettingsResponseModel {
    if (json == null) {
        return json;
    }
    return {
        
        'currentState': json['currentState'],
        'newState': json['newState'],
        'newVersion': json['newVersion'],
        'oldVersion': json['oldVersion'],
        'reportUrl': json['reportUrl'],
    };
}

export function UpgradeSettingsResponseModelToJSON(json: any): UpgradeSettingsResponseModel {
    return UpgradeSettingsResponseModelToJSONTyped(json, false);
}

export function UpgradeSettingsResponseModelToJSONTyped(value?: Omit<UpgradeSettingsResponseModel, 'reportUrl'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'currentState': value['currentState'],
        'newState': value['newState'],
        'newVersion': value['newVersion'],
        'oldVersion': value['oldVersion'],
    };
}

