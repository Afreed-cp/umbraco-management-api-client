/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserExternalLoginProviderModel
 */
export interface UserExternalLoginProviderModel {
    /**
     * 
     * @type {string}
     * @memberof UserExternalLoginProviderModel
     */
    providerSchemeName: string;
    /**
     * 
     * @type {string}
     * @memberof UserExternalLoginProviderModel
     */
    providerKey?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof UserExternalLoginProviderModel
     */
    isLinkedOnUser: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UserExternalLoginProviderModel
     */
    hasManualLinkingEnabled: boolean;
}

/**
 * Check if a given object implements the UserExternalLoginProviderModel interface.
 */
export function instanceOfUserExternalLoginProviderModel(value: object): value is UserExternalLoginProviderModel {
    if (!('providerSchemeName' in value) || value['providerSchemeName'] === undefined) return false;
    if (!('isLinkedOnUser' in value) || value['isLinkedOnUser'] === undefined) return false;
    if (!('hasManualLinkingEnabled' in value) || value['hasManualLinkingEnabled'] === undefined) return false;
    return true;
}

export function UserExternalLoginProviderModelFromJSON(json: any): UserExternalLoginProviderModel {
    return UserExternalLoginProviderModelFromJSONTyped(json, false);
}

export function UserExternalLoginProviderModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserExternalLoginProviderModel {
    if (json == null) {
        return json;
    }
    return {
        
        'providerSchemeName': json['providerSchemeName'],
        'providerKey': json['providerKey'] == null ? undefined : json['providerKey'],
        'isLinkedOnUser': json['isLinkedOnUser'],
        'hasManualLinkingEnabled': json['hasManualLinkingEnabled'],
    };
}

export function UserExternalLoginProviderModelToJSON(json: any): UserExternalLoginProviderModel {
    return UserExternalLoginProviderModelToJSONTyped(json, false);
}

export function UserExternalLoginProviderModelToJSONTyped(value?: UserExternalLoginProviderModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'providerSchemeName': value['providerSchemeName'],
        'providerKey': value['providerKey'],
        'isLinkedOnUser': value['isLinkedOnUser'],
        'hasManualLinkingEnabled': value['hasManualLinkingEnabled'],
    };
}

