/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DomainsResponseModelDomainsInner } from './DomainsResponseModelDomainsInner';
import {
    DomainsResponseModelDomainsInnerFromJSON,
    DomainsResponseModelDomainsInnerFromJSONTyped,
    DomainsResponseModelDomainsInnerToJSON,
    DomainsResponseModelDomainsInnerToJSONTyped,
} from './DomainsResponseModelDomainsInner';

/**
 * 
 * @export
 * @interface DomainsResponseModel
 */
export interface DomainsResponseModel {
    /**
     * 
     * @type {string}
     * @memberof DomainsResponseModel
     */
    defaultIsoCode?: string | null;
    /**
     * 
     * @type {Array<DomainsResponseModelDomainsInner>}
     * @memberof DomainsResponseModel
     */
    domains: Array<DomainsResponseModelDomainsInner>;
}

/**
 * Check if a given object implements the DomainsResponseModel interface.
 */
export function instanceOfDomainsResponseModel(value: object): value is DomainsResponseModel {
    if (!('domains' in value) || value['domains'] === undefined) return false;
    return true;
}

export function DomainsResponseModelFromJSON(json: any): DomainsResponseModel {
    return DomainsResponseModelFromJSONTyped(json, false);
}

export function DomainsResponseModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): DomainsResponseModel {
    if (json == null) {
        return json;
    }
    return {
        
        'defaultIsoCode': json['defaultIsoCode'] == null ? undefined : json['defaultIsoCode'],
        'domains': ((json['domains'] as Array<any>).map(DomainsResponseModelDomainsInnerFromJSON)),
    };
}

export function DomainsResponseModelToJSON(json: any): DomainsResponseModel {
    return DomainsResponseModelToJSONTyped(json, false);
}

export function DomainsResponseModelToJSONTyped(value?: DomainsResponseModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'defaultIsoCode': value['defaultIsoCode'],
        'domains': ((value['domains'] as Array<any>).map(DomainsResponseModelDomainsInnerToJSON)),
    };
}

