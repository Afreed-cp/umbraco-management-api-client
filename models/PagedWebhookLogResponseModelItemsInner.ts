/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { WebhookLogResponseModel } from './WebhookLogResponseModel';
import {
    instanceOfWebhookLogResponseModel,
    WebhookLogResponseModelFromJSON,
    WebhookLogResponseModelFromJSONTyped,
    WebhookLogResponseModelToJSON,
} from './WebhookLogResponseModel';

/**
 * @type PagedWebhookLogResponseModelItemsInner
 * 
 * @export
 */
export type PagedWebhookLogResponseModelItemsInner = WebhookLogResponseModel;

export function PagedWebhookLogResponseModelItemsInnerFromJSON(json: any): PagedWebhookLogResponseModelItemsInner {
    return PagedWebhookLogResponseModelItemsInnerFromJSONTyped(json, false);
}

export function PagedWebhookLogResponseModelItemsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): PagedWebhookLogResponseModelItemsInner {
    if (json == null) {
        return json;
    }
    if (typeof json !== 'object') {
        return json;
    }
    if (instanceOfWebhookLogResponseModel(json)) {
        return WebhookLogResponseModelFromJSONTyped(json, true);
    }

    return {} as any;
}

export function PagedWebhookLogResponseModelItemsInnerToJSON(json: any): any {
    return PagedWebhookLogResponseModelItemsInnerToJSONTyped(json, false);
}

export function PagedWebhookLogResponseModelItemsInnerToJSONTyped(value?: PagedWebhookLogResponseModelItemsInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    if (typeof value !== 'object') {
        return value;
    }
    if (instanceOfWebhookLogResponseModel(value)) {
        return WebhookLogResponseModelToJSON(value as WebhookLogResponseModel);
    }

    return {};
}

