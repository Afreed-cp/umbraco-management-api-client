/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ReferenceByIdModel } from './ReferenceByIdModel';
import {
    ReferenceByIdModelFromJSON,
    ReferenceByIdModelFromJSONTyped,
    ReferenceByIdModelToJSON,
    ReferenceByIdModelToJSONTyped,
} from './ReferenceByIdModel';

/**
 * 
 * @export
 * @interface ImportDictionaryRequestModel
 */
export interface ImportDictionaryRequestModel {
    /**
     * 
     * @type {ReferenceByIdModel}
     * @memberof ImportDictionaryRequestModel
     */
    temporaryFile: ReferenceByIdModel;
    /**
     * 
     * @type {ReferenceByIdModel}
     * @memberof ImportDictionaryRequestModel
     */
    parent?: ReferenceByIdModel | null;
}

/**
 * Check if a given object implements the ImportDictionaryRequestModel interface.
 */
export function instanceOfImportDictionaryRequestModel(value: object): value is ImportDictionaryRequestModel {
    if (!('temporaryFile' in value) || value['temporaryFile'] === undefined) return false;
    return true;
}

export function ImportDictionaryRequestModelFromJSON(json: any): ImportDictionaryRequestModel {
    return ImportDictionaryRequestModelFromJSONTyped(json, false);
}

export function ImportDictionaryRequestModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImportDictionaryRequestModel {
    if (json == null) {
        return json;
    }
    return {
        
        'temporaryFile': ReferenceByIdModelFromJSON(json['temporaryFile']),
        'parent': json['parent'] == null ? undefined : ReferenceByIdModelFromJSON(json['parent']),
    };
}

export function ImportDictionaryRequestModelToJSON(json: any): ImportDictionaryRequestModel {
    return ImportDictionaryRequestModelToJSONTyped(json, false);
}

export function ImportDictionaryRequestModelToJSONTyped(value?: ImportDictionaryRequestModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'temporaryFile': ReferenceByIdModelToJSON(value['temporaryFile']),
        'parent': ReferenceByIdModelToJSON(value['parent']),
    };
}

