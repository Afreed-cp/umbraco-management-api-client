/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserInstallRequestModel
 */
export interface UserInstallRequestModel {
    /**
     * 
     * @type {string}
     * @memberof UserInstallRequestModel
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof UserInstallRequestModel
     */
    email: string;
    /**
     * 
     * @type {string}
     * @memberof UserInstallRequestModel
     */
    password: string;
    /**
     * 
     * @type {boolean}
     * @memberof UserInstallRequestModel
     */
    readonly subscribeToNewsletter: boolean;
}

/**
 * Check if a given object implements the UserInstallRequestModel interface.
 */
export function instanceOfUserInstallRequestModel(value: object): value is UserInstallRequestModel {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('password' in value) || value['password'] === undefined) return false;
    if (!('subscribeToNewsletter' in value) || value['subscribeToNewsletter'] === undefined) return false;
    return true;
}

export function UserInstallRequestModelFromJSON(json: any): UserInstallRequestModel {
    return UserInstallRequestModelFromJSONTyped(json, false);
}

export function UserInstallRequestModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserInstallRequestModel {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'email': json['email'],
        'password': json['password'],
        'subscribeToNewsletter': json['subscribeToNewsletter'],
    };
}

export function UserInstallRequestModelToJSON(json: any): UserInstallRequestModel {
    return UserInstallRequestModelToJSONTyped(json, false);
}

export function UserInstallRequestModelToJSONTyped(value?: Omit<UserInstallRequestModel, 'subscribeToNewsletter'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'email': value['email'],
        'password': value['password'],
    };
}

