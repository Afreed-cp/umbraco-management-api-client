/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DocumentResponseModelUrlsInner } from './DocumentResponseModelUrlsInner';
import {
    DocumentResponseModelUrlsInnerFromJSON,
    DocumentResponseModelUrlsInnerFromJSONTyped,
    DocumentResponseModelUrlsInnerToJSON,
    DocumentResponseModelUrlsInnerToJSONTyped,
} from './DocumentResponseModelUrlsInner';

/**
 * 
 * @export
 * @interface DocumentUrlInfoResponseModel
 */
export interface DocumentUrlInfoResponseModel {
    /**
     * 
     * @type {string}
     * @memberof DocumentUrlInfoResponseModel
     */
    id: string;
    /**
     * 
     * @type {Array<DocumentResponseModelUrlsInner>}
     * @memberof DocumentUrlInfoResponseModel
     */
    urlInfos: Array<DocumentResponseModelUrlsInner>;
}

/**
 * Check if a given object implements the DocumentUrlInfoResponseModel interface.
 */
export function instanceOfDocumentUrlInfoResponseModel(value: object): value is DocumentUrlInfoResponseModel {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('urlInfos' in value) || value['urlInfos'] === undefined) return false;
    return true;
}

export function DocumentUrlInfoResponseModelFromJSON(json: any): DocumentUrlInfoResponseModel {
    return DocumentUrlInfoResponseModelFromJSONTyped(json, false);
}

export function DocumentUrlInfoResponseModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): DocumentUrlInfoResponseModel {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'urlInfos': ((json['urlInfos'] as Array<any>).map(DocumentResponseModelUrlsInnerFromJSON)),
    };
}

export function DocumentUrlInfoResponseModelToJSON(json: any): DocumentUrlInfoResponseModel {
    return DocumentUrlInfoResponseModelToJSONTyped(json, false);
}

export function DocumentUrlInfoResponseModelToJSONTyped(value?: DocumentUrlInfoResponseModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'urlInfos': ((value['urlInfos'] as Array<any>).map(DocumentResponseModelUrlsInnerToJSON)),
    };
}

