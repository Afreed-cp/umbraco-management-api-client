/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MediaCollectionResponseModelVariantsInner } from './MediaCollectionResponseModelVariantsInner';
import {
    MediaCollectionResponseModelVariantsInnerFromJSON,
    MediaCollectionResponseModelVariantsInnerFromJSONTyped,
    MediaCollectionResponseModelVariantsInnerToJSON,
    MediaCollectionResponseModelVariantsInnerToJSONTyped,
} from './MediaCollectionResponseModelVariantsInner';
import type { MediaCollectionResponseModelValuesInner } from './MediaCollectionResponseModelValuesInner';
import {
    MediaCollectionResponseModelValuesInnerFromJSON,
    MediaCollectionResponseModelValuesInnerFromJSONTyped,
    MediaCollectionResponseModelValuesInnerToJSON,
    MediaCollectionResponseModelValuesInnerToJSONTyped,
} from './MediaCollectionResponseModelValuesInner';
import type { MediaResponseModelUrlsInner } from './MediaResponseModelUrlsInner';
import {
    MediaResponseModelUrlsInnerFromJSON,
    MediaResponseModelUrlsInnerFromJSONTyped,
    MediaResponseModelUrlsInnerToJSON,
    MediaResponseModelUrlsInnerToJSONTyped,
} from './MediaResponseModelUrlsInner';
import type { MediaTypeReferenceResponseModel } from './MediaTypeReferenceResponseModel';
import {
    MediaTypeReferenceResponseModelFromJSON,
    MediaTypeReferenceResponseModelFromJSONTyped,
    MediaTypeReferenceResponseModelToJSON,
    MediaTypeReferenceResponseModelToJSONTyped,
} from './MediaTypeReferenceResponseModel';

/**
 * 
 * @export
 * @interface MediaResponseModel
 */
export interface MediaResponseModel {
    /**
     * 
     * @type {Array<MediaCollectionResponseModelValuesInner>}
     * @memberof MediaResponseModel
     */
    values: Array<MediaCollectionResponseModelValuesInner>;
    /**
     * 
     * @type {Array<MediaCollectionResponseModelVariantsInner>}
     * @memberof MediaResponseModel
     */
    variants: Array<MediaCollectionResponseModelVariantsInner>;
    /**
     * 
     * @type {string}
     * @memberof MediaResponseModel
     */
    id: string;
    /**
     * 
     * @type {Array<MediaResponseModelUrlsInner>}
     * @memberof MediaResponseModel
     * @deprecated
     */
    urls: Array<MediaResponseModelUrlsInner>;
    /**
     * 
     * @type {boolean}
     * @memberof MediaResponseModel
     */
    isTrashed: boolean;
    /**
     * 
     * @type {MediaTypeReferenceResponseModel}
     * @memberof MediaResponseModel
     */
    mediaType: MediaTypeReferenceResponseModel;
}

/**
 * Check if a given object implements the MediaResponseModel interface.
 */
export function instanceOfMediaResponseModel(value: object): value is MediaResponseModel {
    if (!('values' in value) || value['values'] === undefined) return false;
    if (!('variants' in value) || value['variants'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('urls' in value) || value['urls'] === undefined) return false;
    if (!('isTrashed' in value) || value['isTrashed'] === undefined) return false;
    if (!('mediaType' in value) || value['mediaType'] === undefined) return false;
    return true;
}

export function MediaResponseModelFromJSON(json: any): MediaResponseModel {
    return MediaResponseModelFromJSONTyped(json, false);
}

export function MediaResponseModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): MediaResponseModel {
    if (json == null) {
        return json;
    }
    return {
        
        'values': ((json['values'] as Array<any>).map(MediaCollectionResponseModelValuesInnerFromJSON)),
        'variants': ((json['variants'] as Array<any>).map(MediaCollectionResponseModelVariantsInnerFromJSON)),
        'id': json['id'],
        'urls': ((json['urls'] as Array<any>).map(MediaResponseModelUrlsInnerFromJSON)),
        'isTrashed': json['isTrashed'],
        'mediaType': MediaTypeReferenceResponseModelFromJSON(json['mediaType']),
    };
}

export function MediaResponseModelToJSON(json: any): MediaResponseModel {
    return MediaResponseModelToJSONTyped(json, false);
}

export function MediaResponseModelToJSONTyped(value?: MediaResponseModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'values': ((value['values'] as Array<any>).map(MediaCollectionResponseModelValuesInnerToJSON)),
        'variants': ((value['variants'] as Array<any>).map(MediaCollectionResponseModelVariantsInnerToJSON)),
        'id': value['id'],
        'urls': ((value['urls'] as Array<any>).map(MediaResponseModelUrlsInnerToJSON)),
        'isTrashed': value['isTrashed'],
        'mediaType': MediaTypeReferenceResponseModelToJSON(value['mediaType']),
    };
}

