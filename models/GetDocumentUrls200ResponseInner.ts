/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { DocumentUrlInfoResponseModel } from './DocumentUrlInfoResponseModel';
import {
    instanceOfDocumentUrlInfoResponseModel,
    DocumentUrlInfoResponseModelFromJSON,
    DocumentUrlInfoResponseModelFromJSONTyped,
    DocumentUrlInfoResponseModelToJSON,
} from './DocumentUrlInfoResponseModel';

/**
 * @type GetDocumentUrls200ResponseInner
 * 
 * @export
 */
export type GetDocumentUrls200ResponseInner = DocumentUrlInfoResponseModel;

export function GetDocumentUrls200ResponseInnerFromJSON(json: any): GetDocumentUrls200ResponseInner {
    return GetDocumentUrls200ResponseInnerFromJSONTyped(json, false);
}

export function GetDocumentUrls200ResponseInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetDocumentUrls200ResponseInner {
    if (json == null) {
        return json;
    }
    if (typeof json !== 'object') {
        return json;
    }
    if (instanceOfDocumentUrlInfoResponseModel(json)) {
        return DocumentUrlInfoResponseModelFromJSONTyped(json, true);
    }

    return {} as any;
}

export function GetDocumentUrls200ResponseInnerToJSON(json: any): any {
    return GetDocumentUrls200ResponseInnerToJSONTyped(json, false);
}

export function GetDocumentUrls200ResponseInnerToJSONTyped(value?: GetDocumentUrls200ResponseInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    if (typeof value !== 'object') {
        return value;
    }
    if (instanceOfDocumentUrlInfoResponseModel(value)) {
        return DocumentUrlInfoResponseModelToJSON(value as DocumentUrlInfoResponseModel);
    }

    return {};
}

