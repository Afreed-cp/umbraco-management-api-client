/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ReferenceByIdModel } from './ReferenceByIdModel';
import {
    ReferenceByIdModelFromJSON,
    ReferenceByIdModelFromJSONTyped,
    ReferenceByIdModelToJSON,
    ReferenceByIdModelToJSONTyped,
} from './ReferenceByIdModel';

/**
 * 
 * @export
 * @interface CopyDocumentRequestModel
 */
export interface CopyDocumentRequestModel {
    /**
     * 
     * @type {ReferenceByIdModel}
     * @memberof CopyDocumentRequestModel
     */
    target?: ReferenceByIdModel | null;
    /**
     * 
     * @type {boolean}
     * @memberof CopyDocumentRequestModel
     */
    relateToOriginal: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CopyDocumentRequestModel
     */
    includeDescendants: boolean;
}

/**
 * Check if a given object implements the CopyDocumentRequestModel interface.
 */
export function instanceOfCopyDocumentRequestModel(value: object): value is CopyDocumentRequestModel {
    if (!('relateToOriginal' in value) || value['relateToOriginal'] === undefined) return false;
    if (!('includeDescendants' in value) || value['includeDescendants'] === undefined) return false;
    return true;
}

export function CopyDocumentRequestModelFromJSON(json: any): CopyDocumentRequestModel {
    return CopyDocumentRequestModelFromJSONTyped(json, false);
}

export function CopyDocumentRequestModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): CopyDocumentRequestModel {
    if (json == null) {
        return json;
    }
    return {
        
        'target': json['target'] == null ? undefined : ReferenceByIdModelFromJSON(json['target']),
        'relateToOriginal': json['relateToOriginal'],
        'includeDescendants': json['includeDescendants'],
    };
}

export function CopyDocumentRequestModelToJSON(json: any): CopyDocumentRequestModel {
    return CopyDocumentRequestModelToJSONTyped(json, false);
}

export function CopyDocumentRequestModelToJSONTyped(value?: CopyDocumentRequestModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'target': ReferenceByIdModelToJSON(value['target']),
        'relateToOriginal': value['relateToOriginal'],
        'includeDescendants': value['includeDescendants'],
    };
}

