/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CreateUserGroupRequestModelPermissionsInner } from './CreateUserGroupRequestModelPermissionsInner';
import {
    CreateUserGroupRequestModelPermissionsInnerFromJSON,
    CreateUserGroupRequestModelPermissionsInnerFromJSONTyped,
    CreateUserGroupRequestModelPermissionsInnerToJSON,
    CreateUserGroupRequestModelPermissionsInnerToJSONTyped,
} from './CreateUserGroupRequestModelPermissionsInner';
import type { ReferenceByIdModel } from './ReferenceByIdModel';
import {
    ReferenceByIdModelFromJSON,
    ReferenceByIdModelFromJSONTyped,
    ReferenceByIdModelToJSON,
    ReferenceByIdModelToJSONTyped,
} from './ReferenceByIdModel';

/**
 * 
 * @export
 * @interface CreateUserGroupRequestModel
 */
export interface CreateUserGroupRequestModel {
    /**
     * 
     * @type {string}
     * @memberof CreateUserGroupRequestModel
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof CreateUserGroupRequestModel
     */
    alias: string;
    /**
     * 
     * @type {string}
     * @memberof CreateUserGroupRequestModel
     */
    icon?: string | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof CreateUserGroupRequestModel
     */
    sections: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof CreateUserGroupRequestModel
     */
    languages: Array<string>;
    /**
     * 
     * @type {boolean}
     * @memberof CreateUserGroupRequestModel
     */
    hasAccessToAllLanguages: boolean;
    /**
     * 
     * @type {ReferenceByIdModel}
     * @memberof CreateUserGroupRequestModel
     */
    documentStartNode?: ReferenceByIdModel | null;
    /**
     * 
     * @type {boolean}
     * @memberof CreateUserGroupRequestModel
     */
    documentRootAccess: boolean;
    /**
     * 
     * @type {ReferenceByIdModel}
     * @memberof CreateUserGroupRequestModel
     */
    mediaStartNode?: ReferenceByIdModel | null;
    /**
     * 
     * @type {boolean}
     * @memberof CreateUserGroupRequestModel
     */
    mediaRootAccess: boolean;
    /**
     * 
     * @type {Set<string>}
     * @memberof CreateUserGroupRequestModel
     */
    fallbackPermissions: Set<string>;
    /**
     * 
     * @type {Set<CreateUserGroupRequestModelPermissionsInner>}
     * @memberof CreateUserGroupRequestModel
     */
    permissions: Set<CreateUserGroupRequestModelPermissionsInner>;
    /**
     * 
     * @type {string}
     * @memberof CreateUserGroupRequestModel
     */
    id?: string | null;
}

/**
 * Check if a given object implements the CreateUserGroupRequestModel interface.
 */
export function instanceOfCreateUserGroupRequestModel(value: object): value is CreateUserGroupRequestModel {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('alias' in value) || value['alias'] === undefined) return false;
    if (!('sections' in value) || value['sections'] === undefined) return false;
    if (!('languages' in value) || value['languages'] === undefined) return false;
    if (!('hasAccessToAllLanguages' in value) || value['hasAccessToAllLanguages'] === undefined) return false;
    if (!('documentRootAccess' in value) || value['documentRootAccess'] === undefined) return false;
    if (!('mediaRootAccess' in value) || value['mediaRootAccess'] === undefined) return false;
    if (!('fallbackPermissions' in value) || value['fallbackPermissions'] === undefined) return false;
    if (!('permissions' in value) || value['permissions'] === undefined) return false;
    return true;
}

export function CreateUserGroupRequestModelFromJSON(json: any): CreateUserGroupRequestModel {
    return CreateUserGroupRequestModelFromJSONTyped(json, false);
}

export function CreateUserGroupRequestModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateUserGroupRequestModel {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'alias': json['alias'],
        'icon': json['icon'] == null ? undefined : json['icon'],
        'sections': json['sections'],
        'languages': json['languages'],
        'hasAccessToAllLanguages': json['hasAccessToAllLanguages'],
        'documentStartNode': json['documentStartNode'] == null ? undefined : ReferenceByIdModelFromJSON(json['documentStartNode']),
        'documentRootAccess': json['documentRootAccess'],
        'mediaStartNode': json['mediaStartNode'] == null ? undefined : ReferenceByIdModelFromJSON(json['mediaStartNode']),
        'mediaRootAccess': json['mediaRootAccess'],
        'fallbackPermissions': new Set(json['fallbackPermissions']),
        'permissions': (new Set((json['permissions'] as Array<any>).map(CreateUserGroupRequestModelPermissionsInnerFromJSON))),
        'id': json['id'] == null ? undefined : json['id'],
    };
}

export function CreateUserGroupRequestModelToJSON(json: any): CreateUserGroupRequestModel {
    return CreateUserGroupRequestModelToJSONTyped(json, false);
}

export function CreateUserGroupRequestModelToJSONTyped(value?: CreateUserGroupRequestModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'alias': value['alias'],
        'icon': value['icon'],
        'sections': value['sections'],
        'languages': value['languages'],
        'hasAccessToAllLanguages': value['hasAccessToAllLanguages'],
        'documentStartNode': ReferenceByIdModelToJSON(value['documentStartNode']),
        'documentRootAccess': value['documentRootAccess'],
        'mediaStartNode': ReferenceByIdModelToJSON(value['mediaStartNode']),
        'mediaRootAccess': value['mediaRootAccess'],
        'fallbackPermissions': Array.from(value['fallbackPermissions'] as Set<any>),
        'permissions': (Array.from(value['permissions'] as Set<any>).map(CreateUserGroupRequestModelPermissionsInnerToJSON)),
        'id': value['id'],
    };
}

