/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { MediaValueResponseModel } from './MediaValueResponseModel';
import {
    instanceOfMediaValueResponseModel,
    MediaValueResponseModelFromJSON,
    MediaValueResponseModelFromJSONTyped,
    MediaValueResponseModelToJSON,
} from './MediaValueResponseModel';

/**
 * @type MediaCollectionResponseModelValuesInner
 * 
 * @export
 */
export type MediaCollectionResponseModelValuesInner = MediaValueResponseModel;

export function MediaCollectionResponseModelValuesInnerFromJSON(json: any): MediaCollectionResponseModelValuesInner {
    return MediaCollectionResponseModelValuesInnerFromJSONTyped(json, false);
}

export function MediaCollectionResponseModelValuesInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): MediaCollectionResponseModelValuesInner {
    if (json == null) {
        return json;
    }
    if (typeof json !== 'object') {
        return json;
    }
    if (instanceOfMediaValueResponseModel(json)) {
        return MediaValueResponseModelFromJSONTyped(json, true);
    }

    return {} as any;
}

export function MediaCollectionResponseModelValuesInnerToJSON(json: any): any {
    return MediaCollectionResponseModelValuesInnerToJSONTyped(json, false);
}

export function MediaCollectionResponseModelValuesInnerToJSONTyped(value?: MediaCollectionResponseModelValuesInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    if (typeof value !== 'object') {
        return value;
    }
    if (instanceOfMediaValueResponseModel(value)) {
        return MediaValueResponseModelToJSON(value as MediaValueResponseModel);
    }

    return {};
}

