/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MediaItemResponseModelVariantsInner } from './MediaItemResponseModelVariantsInner';
import {
    MediaItemResponseModelVariantsInnerFromJSON,
    MediaItemResponseModelVariantsInnerFromJSONTyped,
    MediaItemResponseModelVariantsInnerToJSON,
    MediaItemResponseModelVariantsInnerToJSONTyped,
} from './MediaItemResponseModelVariantsInner';
import type { MediaTypeReferenceResponseModel } from './MediaTypeReferenceResponseModel';
import {
    MediaTypeReferenceResponseModelFromJSON,
    MediaTypeReferenceResponseModelFromJSONTyped,
    MediaTypeReferenceResponseModelToJSON,
    MediaTypeReferenceResponseModelToJSONTyped,
} from './MediaTypeReferenceResponseModel';
import type { ReferenceByIdModel } from './ReferenceByIdModel';
import {
    ReferenceByIdModelFromJSON,
    ReferenceByIdModelFromJSONTyped,
    ReferenceByIdModelToJSON,
    ReferenceByIdModelToJSONTyped,
} from './ReferenceByIdModel';

/**
 * 
 * @export
 * @interface MediaItemResponseModel
 */
export interface MediaItemResponseModel {
    /**
     * 
     * @type {string}
     * @memberof MediaItemResponseModel
     */
    id: string;
    /**
     * 
     * @type {boolean}
     * @memberof MediaItemResponseModel
     */
    isTrashed: boolean;
    /**
     * 
     * @type {ReferenceByIdModel}
     * @memberof MediaItemResponseModel
     */
    parent?: ReferenceByIdModel | null;
    /**
     * 
     * @type {boolean}
     * @memberof MediaItemResponseModel
     */
    hasChildren: boolean;
    /**
     * 
     * @type {MediaTypeReferenceResponseModel}
     * @memberof MediaItemResponseModel
     */
    mediaType: MediaTypeReferenceResponseModel;
    /**
     * 
     * @type {Array<MediaItemResponseModelVariantsInner>}
     * @memberof MediaItemResponseModel
     */
    variants: Array<MediaItemResponseModelVariantsInner>;
}

/**
 * Check if a given object implements the MediaItemResponseModel interface.
 */
export function instanceOfMediaItemResponseModel(value: object): value is MediaItemResponseModel {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('isTrashed' in value) || value['isTrashed'] === undefined) return false;
    if (!('hasChildren' in value) || value['hasChildren'] === undefined) return false;
    if (!('mediaType' in value) || value['mediaType'] === undefined) return false;
    if (!('variants' in value) || value['variants'] === undefined) return false;
    return true;
}

export function MediaItemResponseModelFromJSON(json: any): MediaItemResponseModel {
    return MediaItemResponseModelFromJSONTyped(json, false);
}

export function MediaItemResponseModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): MediaItemResponseModel {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'isTrashed': json['isTrashed'],
        'parent': json['parent'] == null ? undefined : ReferenceByIdModelFromJSON(json['parent']),
        'hasChildren': json['hasChildren'],
        'mediaType': MediaTypeReferenceResponseModelFromJSON(json['mediaType']),
        'variants': ((json['variants'] as Array<any>).map(MediaItemResponseModelVariantsInnerFromJSON)),
    };
}

export function MediaItemResponseModelToJSON(json: any): MediaItemResponseModel {
    return MediaItemResponseModelToJSONTyped(json, false);
}

export function MediaItemResponseModelToJSONTyped(value?: MediaItemResponseModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'isTrashed': value['isTrashed'],
        'parent': ReferenceByIdModelToJSON(value['parent']),
        'hasChildren': value['hasChildren'],
        'mediaType': MediaTypeReferenceResponseModelToJSON(value['mediaType']),
        'variants': ((value['variants'] as Array<any>).map(MediaItemResponseModelVariantsInnerToJSON)),
    };
}

