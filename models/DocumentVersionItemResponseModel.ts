/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ReferenceByIdModel } from './ReferenceByIdModel';
import {
    ReferenceByIdModelFromJSON,
    ReferenceByIdModelFromJSONTyped,
    ReferenceByIdModelToJSON,
    ReferenceByIdModelToJSONTyped,
} from './ReferenceByIdModel';

/**
 * 
 * @export
 * @interface DocumentVersionItemResponseModel
 */
export interface DocumentVersionItemResponseModel {
    /**
     * 
     * @type {string}
     * @memberof DocumentVersionItemResponseModel
     */
    id: string;
    /**
     * 
     * @type {ReferenceByIdModel}
     * @memberof DocumentVersionItemResponseModel
     */
    document: ReferenceByIdModel;
    /**
     * 
     * @type {ReferenceByIdModel}
     * @memberof DocumentVersionItemResponseModel
     */
    documentType: ReferenceByIdModel;
    /**
     * 
     * @type {ReferenceByIdModel}
     * @memberof DocumentVersionItemResponseModel
     */
    user: ReferenceByIdModel;
    /**
     * 
     * @type {Date}
     * @memberof DocumentVersionItemResponseModel
     */
    versionDate: Date;
    /**
     * 
     * @type {boolean}
     * @memberof DocumentVersionItemResponseModel
     */
    isCurrentPublishedVersion: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof DocumentVersionItemResponseModel
     */
    isCurrentDraftVersion: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof DocumentVersionItemResponseModel
     */
    preventCleanup: boolean;
}

/**
 * Check if a given object implements the DocumentVersionItemResponseModel interface.
 */
export function instanceOfDocumentVersionItemResponseModel(value: object): value is DocumentVersionItemResponseModel {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('document' in value) || value['document'] === undefined) return false;
    if (!('documentType' in value) || value['documentType'] === undefined) return false;
    if (!('user' in value) || value['user'] === undefined) return false;
    if (!('versionDate' in value) || value['versionDate'] === undefined) return false;
    if (!('isCurrentPublishedVersion' in value) || value['isCurrentPublishedVersion'] === undefined) return false;
    if (!('isCurrentDraftVersion' in value) || value['isCurrentDraftVersion'] === undefined) return false;
    if (!('preventCleanup' in value) || value['preventCleanup'] === undefined) return false;
    return true;
}

export function DocumentVersionItemResponseModelFromJSON(json: any): DocumentVersionItemResponseModel {
    return DocumentVersionItemResponseModelFromJSONTyped(json, false);
}

export function DocumentVersionItemResponseModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): DocumentVersionItemResponseModel {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'document': ReferenceByIdModelFromJSON(json['document']),
        'documentType': ReferenceByIdModelFromJSON(json['documentType']),
        'user': ReferenceByIdModelFromJSON(json['user']),
        'versionDate': (new Date(json['versionDate'])),
        'isCurrentPublishedVersion': json['isCurrentPublishedVersion'],
        'isCurrentDraftVersion': json['isCurrentDraftVersion'],
        'preventCleanup': json['preventCleanup'],
    };
}

export function DocumentVersionItemResponseModelToJSON(json: any): DocumentVersionItemResponseModel {
    return DocumentVersionItemResponseModelToJSONTyped(json, false);
}

export function DocumentVersionItemResponseModelToJSONTyped(value?: DocumentVersionItemResponseModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'document': ReferenceByIdModelToJSON(value['document']),
        'documentType': ReferenceByIdModelToJSON(value['documentType']),
        'user': ReferenceByIdModelToJSON(value['user']),
        'versionDate': ((value['versionDate']).toISOString()),
        'isCurrentPublishedVersion': value['isCurrentPublishedVersion'],
        'isCurrentDraftVersion': value['isCurrentDraftVersion'],
        'preventCleanup': value['preventCleanup'],
    };
}

