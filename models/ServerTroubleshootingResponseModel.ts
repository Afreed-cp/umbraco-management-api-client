/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ServerTroubleshootingResponseModelItemsInner } from './ServerTroubleshootingResponseModelItemsInner';
import {
    ServerTroubleshootingResponseModelItemsInnerFromJSON,
    ServerTroubleshootingResponseModelItemsInnerFromJSONTyped,
    ServerTroubleshootingResponseModelItemsInnerToJSON,
    ServerTroubleshootingResponseModelItemsInnerToJSONTyped,
} from './ServerTroubleshootingResponseModelItemsInner';

/**
 * 
 * @export
 * @interface ServerTroubleshootingResponseModel
 */
export interface ServerTroubleshootingResponseModel {
    /**
     * 
     * @type {Array<ServerTroubleshootingResponseModelItemsInner>}
     * @memberof ServerTroubleshootingResponseModel
     */
    items: Array<ServerTroubleshootingResponseModelItemsInner>;
}

/**
 * Check if a given object implements the ServerTroubleshootingResponseModel interface.
 */
export function instanceOfServerTroubleshootingResponseModel(value: object): value is ServerTroubleshootingResponseModel {
    if (!('items' in value) || value['items'] === undefined) return false;
    return true;
}

export function ServerTroubleshootingResponseModelFromJSON(json: any): ServerTroubleshootingResponseModel {
    return ServerTroubleshootingResponseModelFromJSONTyped(json, false);
}

export function ServerTroubleshootingResponseModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ServerTroubleshootingResponseModel {
    if (json == null) {
        return json;
    }
    return {
        
        'items': ((json['items'] as Array<any>).map(ServerTroubleshootingResponseModelItemsInnerFromJSON)),
    };
}

export function ServerTroubleshootingResponseModelToJSON(json: any): ServerTroubleshootingResponseModel {
    return ServerTroubleshootingResponseModelToJSONTyped(json, false);
}

export function ServerTroubleshootingResponseModelToJSONTyped(value?: ServerTroubleshootingResponseModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'items': ((value['items'] as Array<any>).map(ServerTroubleshootingResponseModelItemsInnerToJSON)),
    };
}

