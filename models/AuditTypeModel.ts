/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * 
 * @export
 */
export const AuditTypeModel = {
    New: 'New',
    Save: 'Save',
    SaveVariant: 'SaveVariant',
    Open: 'Open',
    Delete: 'Delete',
    Publish: 'Publish',
    PublishVariant: 'PublishVariant',
    SendToPublish: 'SendToPublish',
    SendToPublishVariant: 'SendToPublishVariant',
    Unpublish: 'Unpublish',
    UnpublishVariant: 'UnpublishVariant',
    Move: 'Move',
    Copy: 'Copy',
    AssignDomain: 'AssignDomain',
    PublicAccess: 'PublicAccess',
    Sort: 'Sort',
    Notify: 'Notify',
    System: 'System',
    RollBack: 'RollBack',
    PackagerInstall: 'PackagerInstall',
    PackagerUninstall: 'PackagerUninstall',
    Custom: 'Custom',
    ContentVersionPreventCleanup: 'ContentVersionPreventCleanup',
    ContentVersionEnableCleanup: 'ContentVersionEnableCleanup'
} as const;
export type AuditTypeModel = typeof AuditTypeModel[keyof typeof AuditTypeModel];


export function instanceOfAuditTypeModel(value: any): boolean {
    for (const key in AuditTypeModel) {
        if (Object.prototype.hasOwnProperty.call(AuditTypeModel, key)) {
            if (AuditTypeModel[key as keyof typeof AuditTypeModel] === value) {
                return true;
            }
        }
    }
    return false;
}

export function AuditTypeModelFromJSON(json: any): AuditTypeModel {
    return AuditTypeModelFromJSONTyped(json, false);
}

export function AuditTypeModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuditTypeModel {
    return json as AuditTypeModel;
}

export function AuditTypeModelToJSON(value?: AuditTypeModel | null): any {
    return value as any;
}

export function AuditTypeModelToJSONTyped(value: any, ignoreDiscriminator: boolean): AuditTypeModel {
    return value as AuditTypeModel;
}

