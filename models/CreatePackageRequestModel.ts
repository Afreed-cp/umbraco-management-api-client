/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreatePackageRequestModel
 */
export interface CreatePackageRequestModel {
    /**
     * 
     * @type {string}
     * @memberof CreatePackageRequestModel
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof CreatePackageRequestModel
     */
    contentNodeId?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof CreatePackageRequestModel
     */
    contentLoadChildNodes: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof CreatePackageRequestModel
     */
    mediaIds: Array<string>;
    /**
     * 
     * @type {boolean}
     * @memberof CreatePackageRequestModel
     */
    mediaLoadChildNodes: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof CreatePackageRequestModel
     */
    documentTypes: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof CreatePackageRequestModel
     */
    mediaTypes: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof CreatePackageRequestModel
     */
    dataTypes: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof CreatePackageRequestModel
     */
    templates: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof CreatePackageRequestModel
     */
    partialViews: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof CreatePackageRequestModel
     */
    stylesheets: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof CreatePackageRequestModel
     */
    scripts: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof CreatePackageRequestModel
     */
    languages: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof CreatePackageRequestModel
     */
    dictionaryItems: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof CreatePackageRequestModel
     */
    id?: string | null;
}

/**
 * Check if a given object implements the CreatePackageRequestModel interface.
 */
export function instanceOfCreatePackageRequestModel(value: object): value is CreatePackageRequestModel {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('contentLoadChildNodes' in value) || value['contentLoadChildNodes'] === undefined) return false;
    if (!('mediaIds' in value) || value['mediaIds'] === undefined) return false;
    if (!('mediaLoadChildNodes' in value) || value['mediaLoadChildNodes'] === undefined) return false;
    if (!('documentTypes' in value) || value['documentTypes'] === undefined) return false;
    if (!('mediaTypes' in value) || value['mediaTypes'] === undefined) return false;
    if (!('dataTypes' in value) || value['dataTypes'] === undefined) return false;
    if (!('templates' in value) || value['templates'] === undefined) return false;
    if (!('partialViews' in value) || value['partialViews'] === undefined) return false;
    if (!('stylesheets' in value) || value['stylesheets'] === undefined) return false;
    if (!('scripts' in value) || value['scripts'] === undefined) return false;
    if (!('languages' in value) || value['languages'] === undefined) return false;
    if (!('dictionaryItems' in value) || value['dictionaryItems'] === undefined) return false;
    return true;
}

export function CreatePackageRequestModelFromJSON(json: any): CreatePackageRequestModel {
    return CreatePackageRequestModelFromJSONTyped(json, false);
}

export function CreatePackageRequestModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreatePackageRequestModel {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'contentNodeId': json['contentNodeId'] == null ? undefined : json['contentNodeId'],
        'contentLoadChildNodes': json['contentLoadChildNodes'],
        'mediaIds': json['mediaIds'],
        'mediaLoadChildNodes': json['mediaLoadChildNodes'],
        'documentTypes': json['documentTypes'],
        'mediaTypes': json['mediaTypes'],
        'dataTypes': json['dataTypes'],
        'templates': json['templates'],
        'partialViews': json['partialViews'],
        'stylesheets': json['stylesheets'],
        'scripts': json['scripts'],
        'languages': json['languages'],
        'dictionaryItems': json['dictionaryItems'],
        'id': json['id'] == null ? undefined : json['id'],
    };
}

export function CreatePackageRequestModelToJSON(json: any): CreatePackageRequestModel {
    return CreatePackageRequestModelToJSONTyped(json, false);
}

export function CreatePackageRequestModelToJSONTyped(value?: CreatePackageRequestModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'contentNodeId': value['contentNodeId'],
        'contentLoadChildNodes': value['contentLoadChildNodes'],
        'mediaIds': value['mediaIds'],
        'mediaLoadChildNodes': value['mediaLoadChildNodes'],
        'documentTypes': value['documentTypes'],
        'mediaTypes': value['mediaTypes'],
        'dataTypes': value['dataTypes'],
        'templates': value['templates'],
        'partialViews': value['partialViews'],
        'stylesheets': value['stylesheets'],
        'scripts': value['scripts'],
        'languages': value['languages'],
        'dictionaryItems': value['dictionaryItems'],
        'id': value['id'],
    };
}

