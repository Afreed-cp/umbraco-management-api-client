/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { ConsentLevelPresentationModel } from './ConsentLevelPresentationModel';
import {
    instanceOfConsentLevelPresentationModel,
    ConsentLevelPresentationModelFromJSON,
    ConsentLevelPresentationModelFromJSONTyped,
    ConsentLevelPresentationModelToJSON,
} from './ConsentLevelPresentationModel';

/**
 * @type UserSettingsPresentationModelConsentLevelsInner
 * 
 * @export
 */
export type UserSettingsPresentationModelConsentLevelsInner = ConsentLevelPresentationModel;

export function UserSettingsPresentationModelConsentLevelsInnerFromJSON(json: any): UserSettingsPresentationModelConsentLevelsInner {
    return UserSettingsPresentationModelConsentLevelsInnerFromJSONTyped(json, false);
}

export function UserSettingsPresentationModelConsentLevelsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserSettingsPresentationModelConsentLevelsInner {
    if (json == null) {
        return json;
    }
    if (typeof json !== 'object') {
        return json;
    }
    if (instanceOfConsentLevelPresentationModel(json)) {
        return ConsentLevelPresentationModelFromJSONTyped(json, true);
    }

    return {} as any;
}

export function UserSettingsPresentationModelConsentLevelsInnerToJSON(json: any): any {
    return UserSettingsPresentationModelConsentLevelsInnerToJSONTyped(json, false);
}

export function UserSettingsPresentationModelConsentLevelsInnerToJSONTyped(value?: UserSettingsPresentationModelConsentLevelsInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    if (typeof value !== 'object') {
        return value;
    }
    if (instanceOfConsentLevelPresentationModel(value)) {
        return ConsentLevelPresentationModelToJSON(value as ConsentLevelPresentationModel);
    }

    return {};
}

