/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TemporaryFileConfigurationResponseModel
 */
export interface TemporaryFileConfigurationResponseModel {
    /**
     * 
     * @type {Array<string>}
     * @memberof TemporaryFileConfigurationResponseModel
     */
    imageFileTypes: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof TemporaryFileConfigurationResponseModel
     */
    disallowedUploadedFilesExtensions: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof TemporaryFileConfigurationResponseModel
     */
    allowedUploadedFileExtensions: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof TemporaryFileConfigurationResponseModel
     */
    maxFileSize?: number | null;
}

/**
 * Check if a given object implements the TemporaryFileConfigurationResponseModel interface.
 */
export function instanceOfTemporaryFileConfigurationResponseModel(value: object): value is TemporaryFileConfigurationResponseModel {
    if (!('imageFileTypes' in value) || value['imageFileTypes'] === undefined) return false;
    if (!('disallowedUploadedFilesExtensions' in value) || value['disallowedUploadedFilesExtensions'] === undefined) return false;
    if (!('allowedUploadedFileExtensions' in value) || value['allowedUploadedFileExtensions'] === undefined) return false;
    return true;
}

export function TemporaryFileConfigurationResponseModelFromJSON(json: any): TemporaryFileConfigurationResponseModel {
    return TemporaryFileConfigurationResponseModelFromJSONTyped(json, false);
}

export function TemporaryFileConfigurationResponseModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): TemporaryFileConfigurationResponseModel {
    if (json == null) {
        return json;
    }
    return {
        
        'imageFileTypes': json['imageFileTypes'],
        'disallowedUploadedFilesExtensions': json['disallowedUploadedFilesExtensions'],
        'allowedUploadedFileExtensions': json['allowedUploadedFileExtensions'],
        'maxFileSize': json['maxFileSize'] == null ? undefined : json['maxFileSize'],
    };
}

export function TemporaryFileConfigurationResponseModelToJSON(json: any): TemporaryFileConfigurationResponseModel {
    return TemporaryFileConfigurationResponseModelToJSONTyped(json, false);
}

export function TemporaryFileConfigurationResponseModelToJSONTyped(value?: TemporaryFileConfigurationResponseModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'imageFileTypes': value['imageFileTypes'],
        'disallowedUploadedFilesExtensions': value['disallowedUploadedFilesExtensions'],
        'allowedUploadedFileExtensions': value['allowedUploadedFileExtensions'],
        'maxFileSize': value['maxFileSize'],
    };
}

