/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ReferenceByIdModel } from './ReferenceByIdModel';
import {
    ReferenceByIdModelFromJSON,
    ReferenceByIdModelFromJSONTyped,
    ReferenceByIdModelToJSON,
    ReferenceByIdModelToJSONTyped,
} from './ReferenceByIdModel';

/**
 * 
 * @export
 * @interface MediaTypeReferenceResponseModel
 */
export interface MediaTypeReferenceResponseModel {
    /**
     * 
     * @type {string}
     * @memberof MediaTypeReferenceResponseModel
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof MediaTypeReferenceResponseModel
     */
    icon: string;
    /**
     * 
     * @type {ReferenceByIdModel}
     * @memberof MediaTypeReferenceResponseModel
     */
    collection?: ReferenceByIdModel | null;
}

/**
 * Check if a given object implements the MediaTypeReferenceResponseModel interface.
 */
export function instanceOfMediaTypeReferenceResponseModel(value: object): value is MediaTypeReferenceResponseModel {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('icon' in value) || value['icon'] === undefined) return false;
    return true;
}

export function MediaTypeReferenceResponseModelFromJSON(json: any): MediaTypeReferenceResponseModel {
    return MediaTypeReferenceResponseModelFromJSONTyped(json, false);
}

export function MediaTypeReferenceResponseModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): MediaTypeReferenceResponseModel {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'icon': json['icon'],
        'collection': json['collection'] == null ? undefined : ReferenceByIdModelFromJSON(json['collection']),
    };
}

export function MediaTypeReferenceResponseModelToJSON(json: any): MediaTypeReferenceResponseModel {
    return MediaTypeReferenceResponseModelToJSONTyped(json, false);
}

export function MediaTypeReferenceResponseModelToJSONTyped(value?: MediaTypeReferenceResponseModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'icon': value['icon'],
        'collection': ReferenceByIdModelToJSON(value['collection']),
    };
}

