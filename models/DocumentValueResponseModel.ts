/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DocumentValueResponseModel
 */
export interface DocumentValueResponseModel {
    /**
     * 
     * @type {string}
     * @memberof DocumentValueResponseModel
     */
    culture?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DocumentValueResponseModel
     */
    segment?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DocumentValueResponseModel
     */
    alias: string;
    /**
     * 
     * @type {any}
     * @memberof DocumentValueResponseModel
     */
    value?: any | null;
    /**
     * 
     * @type {string}
     * @memberof DocumentValueResponseModel
     */
    editorAlias: string;
}

/**
 * Check if a given object implements the DocumentValueResponseModel interface.
 */
export function instanceOfDocumentValueResponseModel(value: object): value is DocumentValueResponseModel {
    if (!('alias' in value) || value['alias'] === undefined) return false;
    if (!('editorAlias' in value) || value['editorAlias'] === undefined) return false;
    return true;
}

export function DocumentValueResponseModelFromJSON(json: any): DocumentValueResponseModel {
    return DocumentValueResponseModelFromJSONTyped(json, false);
}

export function DocumentValueResponseModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): DocumentValueResponseModel {
    if (json == null) {
        return json;
    }
    return {
        
        'culture': json['culture'] == null ? undefined : json['culture'],
        'segment': json['segment'] == null ? undefined : json['segment'],
        'alias': json['alias'],
        'value': json['value'] == null ? undefined : json['value'],
        'editorAlias': json['editorAlias'],
    };
}

export function DocumentValueResponseModelToJSON(json: any): DocumentValueResponseModel {
    return DocumentValueResponseModelToJSONTyped(json, false);
}

export function DocumentValueResponseModelToJSONTyped(value?: DocumentValueResponseModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'culture': value['culture'],
        'segment': value['segment'],
        'alias': value['alias'],
        'value': value['value'],
        'editorAlias': value['editorAlias'],
    };
}

