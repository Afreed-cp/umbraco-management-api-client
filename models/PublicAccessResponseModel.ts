/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GetItemMemberGroup200ResponseInner } from './GetItemMemberGroup200ResponseInner';
import {
    GetItemMemberGroup200ResponseInnerFromJSON,
    GetItemMemberGroup200ResponseInnerFromJSONTyped,
    GetItemMemberGroup200ResponseInnerToJSON,
    GetItemMemberGroup200ResponseInnerToJSONTyped,
} from './GetItemMemberGroup200ResponseInner';
import type { GetItemMember200ResponseInner } from './GetItemMember200ResponseInner';
import {
    GetItemMember200ResponseInnerFromJSON,
    GetItemMember200ResponseInnerFromJSONTyped,
    GetItemMember200ResponseInnerToJSON,
    GetItemMember200ResponseInnerToJSONTyped,
} from './GetItemMember200ResponseInner';
import type { ReferenceByIdModel } from './ReferenceByIdModel';
import {
    ReferenceByIdModelFromJSON,
    ReferenceByIdModelFromJSONTyped,
    ReferenceByIdModelToJSON,
    ReferenceByIdModelToJSONTyped,
} from './ReferenceByIdModel';

/**
 * 
 * @export
 * @interface PublicAccessResponseModel
 */
export interface PublicAccessResponseModel {
    /**
     * 
     * @type {ReferenceByIdModel}
     * @memberof PublicAccessResponseModel
     */
    loginDocument: ReferenceByIdModel;
    /**
     * 
     * @type {ReferenceByIdModel}
     * @memberof PublicAccessResponseModel
     */
    errorDocument: ReferenceByIdModel;
    /**
     * 
     * @type {Array<GetItemMember200ResponseInner>}
     * @memberof PublicAccessResponseModel
     */
    members: Array<GetItemMember200ResponseInner>;
    /**
     * 
     * @type {Array<GetItemMemberGroup200ResponseInner>}
     * @memberof PublicAccessResponseModel
     */
    groups: Array<GetItemMemberGroup200ResponseInner>;
}

/**
 * Check if a given object implements the PublicAccessResponseModel interface.
 */
export function instanceOfPublicAccessResponseModel(value: object): value is PublicAccessResponseModel {
    if (!('loginDocument' in value) || value['loginDocument'] === undefined) return false;
    if (!('errorDocument' in value) || value['errorDocument'] === undefined) return false;
    if (!('members' in value) || value['members'] === undefined) return false;
    if (!('groups' in value) || value['groups'] === undefined) return false;
    return true;
}

export function PublicAccessResponseModelFromJSON(json: any): PublicAccessResponseModel {
    return PublicAccessResponseModelFromJSONTyped(json, false);
}

export function PublicAccessResponseModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): PublicAccessResponseModel {
    if (json == null) {
        return json;
    }
    return {
        
        'loginDocument': ReferenceByIdModelFromJSON(json['loginDocument']),
        'errorDocument': ReferenceByIdModelFromJSON(json['errorDocument']),
        'members': ((json['members'] as Array<any>).map(GetItemMember200ResponseInnerFromJSON)),
        'groups': ((json['groups'] as Array<any>).map(GetItemMemberGroup200ResponseInnerFromJSON)),
    };
}

export function PublicAccessResponseModelToJSON(json: any): PublicAccessResponseModel {
    return PublicAccessResponseModelToJSONTyped(json, false);
}

export function PublicAccessResponseModelToJSONTyped(value?: PublicAccessResponseModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'loginDocument': ReferenceByIdModelToJSON(value['loginDocument']),
        'errorDocument': ReferenceByIdModelToJSON(value['errorDocument']),
        'members': ((value['members'] as Array<any>).map(GetItemMember200ResponseInnerToJSON)),
        'groups': ((value['groups'] as Array<any>).map(GetItemMemberGroup200ResponseInnerToJSON)),
    };
}

