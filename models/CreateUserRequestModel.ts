/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserKindModel } from './UserKindModel';
import {
    UserKindModelFromJSON,
    UserKindModelFromJSONTyped,
    UserKindModelToJSON,
    UserKindModelToJSONTyped,
} from './UserKindModel';
import type { PostUserGroupByIdUsersRequestInner } from './PostUserGroupByIdUsersRequestInner';
import {
    PostUserGroupByIdUsersRequestInnerFromJSON,
    PostUserGroupByIdUsersRequestInnerFromJSONTyped,
    PostUserGroupByIdUsersRequestInnerToJSON,
    PostUserGroupByIdUsersRequestInnerToJSONTyped,
} from './PostUserGroupByIdUsersRequestInner';

/**
 * 
 * @export
 * @interface CreateUserRequestModel
 */
export interface CreateUserRequestModel {
    /**
     * 
     * @type {string}
     * @memberof CreateUserRequestModel
     */
    email: string;
    /**
     * 
     * @type {string}
     * @memberof CreateUserRequestModel
     */
    userName: string;
    /**
     * 
     * @type {string}
     * @memberof CreateUserRequestModel
     */
    name: string;
    /**
     * 
     * @type {Set<PostUserGroupByIdUsersRequestInner>}
     * @memberof CreateUserRequestModel
     */
    userGroupIds: Set<PostUserGroupByIdUsersRequestInner>;
    /**
     * 
     * @type {string}
     * @memberof CreateUserRequestModel
     */
    id?: string | null;
    /**
     * 
     * @type {UserKindModel}
     * @memberof CreateUserRequestModel
     */
    kind: UserKindModel;
}



/**
 * Check if a given object implements the CreateUserRequestModel interface.
 */
export function instanceOfCreateUserRequestModel(value: object): value is CreateUserRequestModel {
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('userName' in value) || value['userName'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('userGroupIds' in value) || value['userGroupIds'] === undefined) return false;
    if (!('kind' in value) || value['kind'] === undefined) return false;
    return true;
}

export function CreateUserRequestModelFromJSON(json: any): CreateUserRequestModel {
    return CreateUserRequestModelFromJSONTyped(json, false);
}

export function CreateUserRequestModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateUserRequestModel {
    if (json == null) {
        return json;
    }
    return {
        
        'email': json['email'],
        'userName': json['userName'],
        'name': json['name'],
        'userGroupIds': (new Set((json['userGroupIds'] as Array<any>).map(PostUserGroupByIdUsersRequestInnerFromJSON))),
        'id': json['id'] == null ? undefined : json['id'],
        'kind': UserKindModelFromJSON(json['kind']),
    };
}

export function CreateUserRequestModelToJSON(json: any): CreateUserRequestModel {
    return CreateUserRequestModelToJSONTyped(json, false);
}

export function CreateUserRequestModelToJSONTyped(value?: CreateUserRequestModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'email': value['email'],
        'userName': value['userName'],
        'name': value['name'],
        'userGroupIds': (Array.from(value['userGroupIds'] as Set<any>).map(PostUserGroupByIdUsersRequestInnerToJSON)),
        'id': value['id'],
        'kind': UserKindModelToJSON(value['kind']),
    };
}

