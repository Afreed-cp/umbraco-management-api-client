/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MemberTypePropertyTypeVisibilityModel
 */
export interface MemberTypePropertyTypeVisibilityModel {
    /**
     * 
     * @type {boolean}
     * @memberof MemberTypePropertyTypeVisibilityModel
     */
    memberCanView: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof MemberTypePropertyTypeVisibilityModel
     */
    memberCanEdit: boolean;
}

/**
 * Check if a given object implements the MemberTypePropertyTypeVisibilityModel interface.
 */
export function instanceOfMemberTypePropertyTypeVisibilityModel(value: object): value is MemberTypePropertyTypeVisibilityModel {
    if (!('memberCanView' in value) || value['memberCanView'] === undefined) return false;
    if (!('memberCanEdit' in value) || value['memberCanEdit'] === undefined) return false;
    return true;
}

export function MemberTypePropertyTypeVisibilityModelFromJSON(json: any): MemberTypePropertyTypeVisibilityModel {
    return MemberTypePropertyTypeVisibilityModelFromJSONTyped(json, false);
}

export function MemberTypePropertyTypeVisibilityModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): MemberTypePropertyTypeVisibilityModel {
    if (json == null) {
        return json;
    }
    return {
        
        'memberCanView': json['memberCanView'],
        'memberCanEdit': json['memberCanEdit'],
    };
}

export function MemberTypePropertyTypeVisibilityModelToJSON(json: any): MemberTypePropertyTypeVisibilityModel {
    return MemberTypePropertyTypeVisibilityModelToJSONTyped(json, false);
}

export function MemberTypePropertyTypeVisibilityModelToJSONTyped(value?: MemberTypePropertyTypeVisibilityModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'memberCanView': value['memberCanView'],
        'memberCanEdit': value['memberCanEdit'],
    };
}

