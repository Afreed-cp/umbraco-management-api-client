/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { MediaTypePropertyTypeContainerResponseModel } from './MediaTypePropertyTypeContainerResponseModel';
import {
    instanceOfMediaTypePropertyTypeContainerResponseModel,
    MediaTypePropertyTypeContainerResponseModelFromJSON,
    MediaTypePropertyTypeContainerResponseModelFromJSONTyped,
    MediaTypePropertyTypeContainerResponseModelToJSON,
} from './MediaTypePropertyTypeContainerResponseModel';

/**
 * @type MediaTypeResponseModelContainersInner
 * 
 * @export
 */
export type MediaTypeResponseModelContainersInner = MediaTypePropertyTypeContainerResponseModel;

export function MediaTypeResponseModelContainersInnerFromJSON(json: any): MediaTypeResponseModelContainersInner {
    return MediaTypeResponseModelContainersInnerFromJSONTyped(json, false);
}

export function MediaTypeResponseModelContainersInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): MediaTypeResponseModelContainersInner {
    if (json == null) {
        return json;
    }
    if (typeof json !== 'object') {
        return json;
    }
    if (instanceOfMediaTypePropertyTypeContainerResponseModel(json)) {
        return MediaTypePropertyTypeContainerResponseModelFromJSONTyped(json, true);
    }

    return {} as any;
}

export function MediaTypeResponseModelContainersInnerToJSON(json: any): any {
    return MediaTypeResponseModelContainersInnerToJSONTyped(json, false);
}

export function MediaTypeResponseModelContainersInnerToJSONTyped(value?: MediaTypeResponseModelContainersInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    if (typeof value !== 'object') {
        return value;
    }
    if (instanceOfMediaTypePropertyTypeContainerResponseModel(value)) {
        return MediaTypePropertyTypeContainerResponseModelToJSON(value as MediaTypePropertyTypeContainerResponseModel);
    }

    return {};
}

