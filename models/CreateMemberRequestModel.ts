/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CreateMemberRequestModelVariantsInner } from './CreateMemberRequestModelVariantsInner';
import {
    CreateMemberRequestModelVariantsInnerFromJSON,
    CreateMemberRequestModelVariantsInnerFromJSONTyped,
    CreateMemberRequestModelVariantsInnerToJSON,
    CreateMemberRequestModelVariantsInnerToJSONTyped,
} from './CreateMemberRequestModelVariantsInner';
import type { CreateMemberRequestModelValuesInner } from './CreateMemberRequestModelValuesInner';
import {
    CreateMemberRequestModelValuesInnerFromJSON,
    CreateMemberRequestModelValuesInnerFromJSONTyped,
    CreateMemberRequestModelValuesInnerToJSON,
    CreateMemberRequestModelValuesInnerToJSONTyped,
} from './CreateMemberRequestModelValuesInner';
import type { ReferenceByIdModel } from './ReferenceByIdModel';
import {
    ReferenceByIdModelFromJSON,
    ReferenceByIdModelFromJSONTyped,
    ReferenceByIdModelToJSON,
    ReferenceByIdModelToJSONTyped,
} from './ReferenceByIdModel';

/**
 * 
 * @export
 * @interface CreateMemberRequestModel
 */
export interface CreateMemberRequestModel {
    /**
     * 
     * @type {Array<CreateMemberRequestModelValuesInner>}
     * @memberof CreateMemberRequestModel
     */
    values: Array<CreateMemberRequestModelValuesInner>;
    /**
     * 
     * @type {Array<CreateMemberRequestModelVariantsInner>}
     * @memberof CreateMemberRequestModel
     */
    variants: Array<CreateMemberRequestModelVariantsInner>;
    /**
     * 
     * @type {string}
     * @memberof CreateMemberRequestModel
     */
    id?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CreateMemberRequestModel
     */
    email: string;
    /**
     * 
     * @type {string}
     * @memberof CreateMemberRequestModel
     */
    username: string;
    /**
     * 
     * @type {string}
     * @memberof CreateMemberRequestModel
     */
    password: string;
    /**
     * 
     * @type {ReferenceByIdModel}
     * @memberof CreateMemberRequestModel
     */
    memberType: ReferenceByIdModel;
    /**
     * 
     * @type {Array<string>}
     * @memberof CreateMemberRequestModel
     */
    groups?: Array<string> | null;
    /**
     * 
     * @type {boolean}
     * @memberof CreateMemberRequestModel
     */
    isApproved: boolean;
}

/**
 * Check if a given object implements the CreateMemberRequestModel interface.
 */
export function instanceOfCreateMemberRequestModel(value: object): value is CreateMemberRequestModel {
    if (!('values' in value) || value['values'] === undefined) return false;
    if (!('variants' in value) || value['variants'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('username' in value) || value['username'] === undefined) return false;
    if (!('password' in value) || value['password'] === undefined) return false;
    if (!('memberType' in value) || value['memberType'] === undefined) return false;
    if (!('isApproved' in value) || value['isApproved'] === undefined) return false;
    return true;
}

export function CreateMemberRequestModelFromJSON(json: any): CreateMemberRequestModel {
    return CreateMemberRequestModelFromJSONTyped(json, false);
}

export function CreateMemberRequestModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateMemberRequestModel {
    if (json == null) {
        return json;
    }
    return {
        
        'values': ((json['values'] as Array<any>).map(CreateMemberRequestModelValuesInnerFromJSON)),
        'variants': ((json['variants'] as Array<any>).map(CreateMemberRequestModelVariantsInnerFromJSON)),
        'id': json['id'] == null ? undefined : json['id'],
        'email': json['email'],
        'username': json['username'],
        'password': json['password'],
        'memberType': ReferenceByIdModelFromJSON(json['memberType']),
        'groups': json['groups'] == null ? undefined : json['groups'],
        'isApproved': json['isApproved'],
    };
}

export function CreateMemberRequestModelToJSON(json: any): CreateMemberRequestModel {
    return CreateMemberRequestModelToJSONTyped(json, false);
}

export function CreateMemberRequestModelToJSONTyped(value?: CreateMemberRequestModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'values': ((value['values'] as Array<any>).map(CreateMemberRequestModelValuesInnerToJSON)),
        'variants': ((value['variants'] as Array<any>).map(CreateMemberRequestModelVariantsInnerToJSON)),
        'id': value['id'],
        'email': value['email'],
        'username': value['username'],
        'password': value['password'],
        'memberType': ReferenceByIdModelToJSON(value['memberType']),
        'groups': value['groups'],
        'isApproved': value['isApproved'],
    };
}

