/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpdateLanguageRequestModel
 */
export interface UpdateLanguageRequestModel {
    /**
     * 
     * @type {string}
     * @memberof UpdateLanguageRequestModel
     */
    name: string;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateLanguageRequestModel
     */
    isDefault: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateLanguageRequestModel
     */
    isMandatory: boolean;
    /**
     * 
     * @type {string}
     * @memberof UpdateLanguageRequestModel
     */
    fallbackIsoCode?: string | null;
}

/**
 * Check if a given object implements the UpdateLanguageRequestModel interface.
 */
export function instanceOfUpdateLanguageRequestModel(value: object): value is UpdateLanguageRequestModel {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('isDefault' in value) || value['isDefault'] === undefined) return false;
    if (!('isMandatory' in value) || value['isMandatory'] === undefined) return false;
    return true;
}

export function UpdateLanguageRequestModelFromJSON(json: any): UpdateLanguageRequestModel {
    return UpdateLanguageRequestModelFromJSONTyped(json, false);
}

export function UpdateLanguageRequestModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateLanguageRequestModel {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'isDefault': json['isDefault'],
        'isMandatory': json['isMandatory'],
        'fallbackIsoCode': json['fallbackIsoCode'] == null ? undefined : json['fallbackIsoCode'],
    };
}

export function UpdateLanguageRequestModelToJSON(json: any): UpdateLanguageRequestModel {
    return UpdateLanguageRequestModelToJSONTyped(json, false);
}

export function UpdateLanguageRequestModelToJSONTyped(value?: UpdateLanguageRequestModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'isDefault': value['isDefault'],
        'isMandatory': value['isMandatory'],
        'fallbackIsoCode': value['fallbackIsoCode'],
    };
}

