/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * 
 * @export
 */
export const DataTypeChangeModeModel = {
    True: 'True',
    False: 'False',
    FalseWithHelpText: 'FalseWithHelpText'
} as const;
export type DataTypeChangeModeModel = typeof DataTypeChangeModeModel[keyof typeof DataTypeChangeModeModel];


export function instanceOfDataTypeChangeModeModel(value: any): boolean {
    for (const key in DataTypeChangeModeModel) {
        if (Object.prototype.hasOwnProperty.call(DataTypeChangeModeModel, key)) {
            if (DataTypeChangeModeModel[key as keyof typeof DataTypeChangeModeModel] === value) {
                return true;
            }
        }
    }
    return false;
}

export function DataTypeChangeModeModelFromJSON(json: any): DataTypeChangeModeModel {
    return DataTypeChangeModeModelFromJSONTyped(json, false);
}

export function DataTypeChangeModeModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): DataTypeChangeModeModel {
    return json as DataTypeChangeModeModel;
}

export function DataTypeChangeModeModelToJSON(value?: DataTypeChangeModeModel | null): any {
    return value as any;
}

export function DataTypeChangeModeModelToJSONTyped(value: any, ignoreDiscriminator: boolean): DataTypeChangeModeModel {
    return value as DataTypeChangeModeModel;
}

