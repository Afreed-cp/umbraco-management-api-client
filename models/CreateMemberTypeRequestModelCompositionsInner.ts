/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { MemberTypeCompositionModel } from './MemberTypeCompositionModel';
import {
    instanceOfMemberTypeCompositionModel,
    MemberTypeCompositionModelFromJSON,
    MemberTypeCompositionModelFromJSONTyped,
    MemberTypeCompositionModelToJSON,
} from './MemberTypeCompositionModel';

/**
 * @type CreateMemberTypeRequestModelCompositionsInner
 * 
 * @export
 */
export type CreateMemberTypeRequestModelCompositionsInner = MemberTypeCompositionModel;

export function CreateMemberTypeRequestModelCompositionsInnerFromJSON(json: any): CreateMemberTypeRequestModelCompositionsInner {
    return CreateMemberTypeRequestModelCompositionsInnerFromJSONTyped(json, false);
}

export function CreateMemberTypeRequestModelCompositionsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateMemberTypeRequestModelCompositionsInner {
    if (json == null) {
        return json;
    }
    if (typeof json !== 'object') {
        return json;
    }
    if (instanceOfMemberTypeCompositionModel(json)) {
        return MemberTypeCompositionModelFromJSONTyped(json, true);
    }

    return {} as any;
}

export function CreateMemberTypeRequestModelCompositionsInnerToJSON(json: any): any {
    return CreateMemberTypeRequestModelCompositionsInnerToJSONTyped(json, false);
}

export function CreateMemberTypeRequestModelCompositionsInnerToJSONTyped(value?: CreateMemberTypeRequestModelCompositionsInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    if (typeof value !== 'object') {
        return value;
    }
    if (instanceOfMemberTypeCompositionModel(value)) {
        return MemberTypeCompositionModelToJSON(value as MemberTypeCompositionModel);
    }

    return {};
}

