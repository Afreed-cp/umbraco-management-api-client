/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DataTypeContentTypeReferenceModel } from './DataTypeContentTypeReferenceModel';
import {
    DataTypeContentTypeReferenceModelFromJSON,
    DataTypeContentTypeReferenceModelFromJSONTyped,
    DataTypeContentTypeReferenceModelToJSON,
    DataTypeContentTypeReferenceModelToJSONTyped,
} from './DataTypeContentTypeReferenceModel';
import type { DataTypeReferenceResponseModelPropertiesInner } from './DataTypeReferenceResponseModelPropertiesInner';
import {
    DataTypeReferenceResponseModelPropertiesInnerFromJSON,
    DataTypeReferenceResponseModelPropertiesInnerFromJSONTyped,
    DataTypeReferenceResponseModelPropertiesInnerToJSON,
    DataTypeReferenceResponseModelPropertiesInnerToJSONTyped,
} from './DataTypeReferenceResponseModelPropertiesInner';

/**
 * 
 * @export
 * @interface DataTypeReferenceResponseModel
 */
export interface DataTypeReferenceResponseModel {
    /**
     * 
     * @type {DataTypeContentTypeReferenceModel}
     * @memberof DataTypeReferenceResponseModel
     */
    contentType: DataTypeContentTypeReferenceModel;
    /**
     * 
     * @type {Array<DataTypeReferenceResponseModelPropertiesInner>}
     * @memberof DataTypeReferenceResponseModel
     */
    properties: Array<DataTypeReferenceResponseModelPropertiesInner>;
}

/**
 * Check if a given object implements the DataTypeReferenceResponseModel interface.
 */
export function instanceOfDataTypeReferenceResponseModel(value: object): value is DataTypeReferenceResponseModel {
    if (!('contentType' in value) || value['contentType'] === undefined) return false;
    if (!('properties' in value) || value['properties'] === undefined) return false;
    return true;
}

export function DataTypeReferenceResponseModelFromJSON(json: any): DataTypeReferenceResponseModel {
    return DataTypeReferenceResponseModelFromJSONTyped(json, false);
}

export function DataTypeReferenceResponseModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): DataTypeReferenceResponseModel {
    if (json == null) {
        return json;
    }
    return {
        
        'contentType': DataTypeContentTypeReferenceModelFromJSON(json['contentType']),
        'properties': ((json['properties'] as Array<any>).map(DataTypeReferenceResponseModelPropertiesInnerFromJSON)),
    };
}

export function DataTypeReferenceResponseModelToJSON(json: any): DataTypeReferenceResponseModel {
    return DataTypeReferenceResponseModelToJSONTyped(json, false);
}

export function DataTypeReferenceResponseModelToJSONTyped(value?: DataTypeReferenceResponseModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'contentType': DataTypeContentTypeReferenceModelToJSON(value['contentType']),
        'properties': ((value['properties'] as Array<any>).map(DataTypeReferenceResponseModelPropertiesInnerToJSON)),
    };
}

