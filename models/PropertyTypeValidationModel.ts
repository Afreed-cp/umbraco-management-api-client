/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PropertyTypeValidationModel
 */
export interface PropertyTypeValidationModel {
    /**
     * 
     * @type {boolean}
     * @memberof PropertyTypeValidationModel
     */
    mandatory: boolean;
    /**
     * 
     * @type {string}
     * @memberof PropertyTypeValidationModel
     */
    mandatoryMessage?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PropertyTypeValidationModel
     */
    regEx?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PropertyTypeValidationModel
     */
    regExMessage?: string | null;
}

/**
 * Check if a given object implements the PropertyTypeValidationModel interface.
 */
export function instanceOfPropertyTypeValidationModel(value: object): value is PropertyTypeValidationModel {
    if (!('mandatory' in value) || value['mandatory'] === undefined) return false;
    return true;
}

export function PropertyTypeValidationModelFromJSON(json: any): PropertyTypeValidationModel {
    return PropertyTypeValidationModelFromJSONTyped(json, false);
}

export function PropertyTypeValidationModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): PropertyTypeValidationModel {
    if (json == null) {
        return json;
    }
    return {
        
        'mandatory': json['mandatory'],
        'mandatoryMessage': json['mandatoryMessage'] == null ? undefined : json['mandatoryMessage'],
        'regEx': json['regEx'] == null ? undefined : json['regEx'],
        'regExMessage': json['regExMessage'] == null ? undefined : json['regExMessage'],
    };
}

export function PropertyTypeValidationModelToJSON(json: any): PropertyTypeValidationModel {
    return PropertyTypeValidationModelToJSONTyped(json, false);
}

export function PropertyTypeValidationModelToJSONTyped(value?: PropertyTypeValidationModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'mandatory': value['mandatory'],
        'mandatoryMessage': value['mandatoryMessage'],
        'regEx': value['regEx'],
        'regExMessage': value['regExMessage'],
    };
}

