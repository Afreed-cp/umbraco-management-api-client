/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { ObjectTypeResponseModel } from './ObjectTypeResponseModel';
import {
    instanceOfObjectTypeResponseModel,
    ObjectTypeResponseModelFromJSON,
    ObjectTypeResponseModelFromJSONTyped,
    ObjectTypeResponseModelToJSON,
} from './ObjectTypeResponseModel';

/**
 * @type PagedObjectTypeResponseModelItemsInner
 * 
 * @export
 */
export type PagedObjectTypeResponseModelItemsInner = ObjectTypeResponseModel;

export function PagedObjectTypeResponseModelItemsInnerFromJSON(json: any): PagedObjectTypeResponseModelItemsInner {
    return PagedObjectTypeResponseModelItemsInnerFromJSONTyped(json, false);
}

export function PagedObjectTypeResponseModelItemsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): PagedObjectTypeResponseModelItemsInner {
    if (json == null) {
        return json;
    }
    if (typeof json !== 'object') {
        return json;
    }
    if (instanceOfObjectTypeResponseModel(json)) {
        return ObjectTypeResponseModelFromJSONTyped(json, true);
    }

    return {} as any;
}

export function PagedObjectTypeResponseModelItemsInnerToJSON(json: any): any {
    return PagedObjectTypeResponseModelItemsInnerToJSONTyped(json, false);
}

export function PagedObjectTypeResponseModelItemsInnerToJSONTyped(value?: PagedObjectTypeResponseModelItemsInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    if (typeof value !== 'object') {
        return value;
    }
    if (instanceOfObjectTypeResponseModel(value)) {
        return ObjectTypeResponseModelToJSON(value as ObjectTypeResponseModel);
    }

    return {};
}

