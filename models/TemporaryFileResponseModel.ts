/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TemporaryFileResponseModel
 */
export interface TemporaryFileResponseModel {
    /**
     * 
     * @type {string}
     * @memberof TemporaryFileResponseModel
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof TemporaryFileResponseModel
     */
    availableUntil?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof TemporaryFileResponseModel
     */
    fileName: string;
}

/**
 * Check if a given object implements the TemporaryFileResponseModel interface.
 */
export function instanceOfTemporaryFileResponseModel(value: object): value is TemporaryFileResponseModel {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('fileName' in value) || value['fileName'] === undefined) return false;
    return true;
}

export function TemporaryFileResponseModelFromJSON(json: any): TemporaryFileResponseModel {
    return TemporaryFileResponseModelFromJSONTyped(json, false);
}

export function TemporaryFileResponseModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): TemporaryFileResponseModel {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'availableUntil': json['availableUntil'] == null ? undefined : (new Date(json['availableUntil'])),
        'fileName': json['fileName'],
    };
}

export function TemporaryFileResponseModelToJSON(json: any): TemporaryFileResponseModel {
    return TemporaryFileResponseModelToJSONTyped(json, false);
}

export function TemporaryFileResponseModelToJSONTyped(value?: TemporaryFileResponseModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'availableUntil': value['availableUntil'] == null ? undefined : ((value['availableUntil'] as any).toISOString()),
        'fileName': value['fileName'],
    };
}

