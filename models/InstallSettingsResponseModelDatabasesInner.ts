/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { DatabaseSettingsPresentationModel } from './DatabaseSettingsPresentationModel';
import {
    instanceOfDatabaseSettingsPresentationModel,
    DatabaseSettingsPresentationModelFromJSON,
    DatabaseSettingsPresentationModelFromJSONTyped,
    DatabaseSettingsPresentationModelToJSON,
} from './DatabaseSettingsPresentationModel';

/**
 * @type InstallSettingsResponseModelDatabasesInner
 * 
 * @export
 */
export type InstallSettingsResponseModelDatabasesInner = DatabaseSettingsPresentationModel;

export function InstallSettingsResponseModelDatabasesInnerFromJSON(json: any): InstallSettingsResponseModelDatabasesInner {
    return InstallSettingsResponseModelDatabasesInnerFromJSONTyped(json, false);
}

export function InstallSettingsResponseModelDatabasesInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): InstallSettingsResponseModelDatabasesInner {
    if (json == null) {
        return json;
    }
    if (typeof json !== 'object') {
        return json;
    }
    if (instanceOfDatabaseSettingsPresentationModel(json)) {
        return DatabaseSettingsPresentationModelFromJSONTyped(json, true);
    }

    return {} as any;
}

export function InstallSettingsResponseModelDatabasesInnerToJSON(json: any): any {
    return InstallSettingsResponseModelDatabasesInnerToJSONTyped(json, false);
}

export function InstallSettingsResponseModelDatabasesInnerToJSONTyped(value?: InstallSettingsResponseModelDatabasesInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    if (typeof value !== 'object') {
        return value;
    }
    if (instanceOfDatabaseSettingsPresentationModel(value)) {
        return DatabaseSettingsPresentationModelToJSON(value as DatabaseSettingsPresentationModel);
    }

    return {};
}

