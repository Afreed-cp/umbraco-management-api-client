/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DocumentTypeCollectionReferenceResponseModel
 */
export interface DocumentTypeCollectionReferenceResponseModel {
    /**
     * 
     * @type {string}
     * @memberof DocumentTypeCollectionReferenceResponseModel
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof DocumentTypeCollectionReferenceResponseModel
     */
    alias: string;
    /**
     * 
     * @type {string}
     * @memberof DocumentTypeCollectionReferenceResponseModel
     */
    icon: string;
}

/**
 * Check if a given object implements the DocumentTypeCollectionReferenceResponseModel interface.
 */
export function instanceOfDocumentTypeCollectionReferenceResponseModel(value: object): value is DocumentTypeCollectionReferenceResponseModel {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('alias' in value) || value['alias'] === undefined) return false;
    if (!('icon' in value) || value['icon'] === undefined) return false;
    return true;
}

export function DocumentTypeCollectionReferenceResponseModelFromJSON(json: any): DocumentTypeCollectionReferenceResponseModel {
    return DocumentTypeCollectionReferenceResponseModelFromJSONTyped(json, false);
}

export function DocumentTypeCollectionReferenceResponseModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): DocumentTypeCollectionReferenceResponseModel {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'alias': json['alias'],
        'icon': json['icon'],
    };
}

export function DocumentTypeCollectionReferenceResponseModelToJSON(json: any): DocumentTypeCollectionReferenceResponseModel {
    return DocumentTypeCollectionReferenceResponseModelToJSONTyped(json, false);
}

export function DocumentTypeCollectionReferenceResponseModelToJSONTyped(value?: DocumentTypeCollectionReferenceResponseModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'alias': value['alias'],
        'icon': value['icon'],
    };
}

