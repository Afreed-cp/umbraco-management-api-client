/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { UserPermissionModel } from './UserPermissionModel';
import {
    instanceOfUserPermissionModel,
    UserPermissionModelFromJSON,
    UserPermissionModelFromJSONTyped,
    UserPermissionModelToJSON,
} from './UserPermissionModel';

/**
 * @type UserPermissionsResponseModelPermissionsInner
 * 
 * @export
 */
export type UserPermissionsResponseModelPermissionsInner = UserPermissionModel;

export function UserPermissionsResponseModelPermissionsInnerFromJSON(json: any): UserPermissionsResponseModelPermissionsInner {
    return UserPermissionsResponseModelPermissionsInnerFromJSONTyped(json, false);
}

export function UserPermissionsResponseModelPermissionsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserPermissionsResponseModelPermissionsInner {
    if (json == null) {
        return json;
    }
    if (typeof json !== 'object') {
        return json;
    }
    if (instanceOfUserPermissionModel(json)) {
        return UserPermissionModelFromJSONTyped(json, true);
    }

    return {} as any;
}

export function UserPermissionsResponseModelPermissionsInnerToJSON(json: any): any {
    return UserPermissionsResponseModelPermissionsInnerToJSONTyped(json, false);
}

export function UserPermissionsResponseModelPermissionsInnerToJSONTyped(value?: UserPermissionsResponseModelPermissionsInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    if (typeof value !== 'object') {
        return value;
    }
    if (instanceOfUserPermissionModel(value)) {
        return UserPermissionModelToJSON(value as UserPermissionModel);
    }

    return {};
}

