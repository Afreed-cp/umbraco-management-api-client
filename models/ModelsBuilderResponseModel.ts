/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModelsModeModel } from './ModelsModeModel';
import {
    ModelsModeModelFromJSON,
    ModelsModeModelFromJSONTyped,
    ModelsModeModelToJSON,
    ModelsModeModelToJSONTyped,
} from './ModelsModeModel';

/**
 * 
 * @export
 * @interface ModelsBuilderResponseModel
 */
export interface ModelsBuilderResponseModel {
    /**
     * 
     * @type {ModelsModeModel}
     * @memberof ModelsBuilderResponseModel
     */
    mode: ModelsModeModel;
    /**
     * 
     * @type {boolean}
     * @memberof ModelsBuilderResponseModel
     */
    canGenerate: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ModelsBuilderResponseModel
     */
    outOfDateModels: boolean;
    /**
     * 
     * @type {string}
     * @memberof ModelsBuilderResponseModel
     */
    lastError?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ModelsBuilderResponseModel
     */
    version?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ModelsBuilderResponseModel
     */
    modelsNamespace?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof ModelsBuilderResponseModel
     */
    trackingOutOfDateModels: boolean;
}



/**
 * Check if a given object implements the ModelsBuilderResponseModel interface.
 */
export function instanceOfModelsBuilderResponseModel(value: object): value is ModelsBuilderResponseModel {
    if (!('mode' in value) || value['mode'] === undefined) return false;
    if (!('canGenerate' in value) || value['canGenerate'] === undefined) return false;
    if (!('outOfDateModels' in value) || value['outOfDateModels'] === undefined) return false;
    if (!('trackingOutOfDateModels' in value) || value['trackingOutOfDateModels'] === undefined) return false;
    return true;
}

export function ModelsBuilderResponseModelFromJSON(json: any): ModelsBuilderResponseModel {
    return ModelsBuilderResponseModelFromJSONTyped(json, false);
}

export function ModelsBuilderResponseModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelsBuilderResponseModel {
    if (json == null) {
        return json;
    }
    return {
        
        'mode': ModelsModeModelFromJSON(json['mode']),
        'canGenerate': json['canGenerate'],
        'outOfDateModels': json['outOfDateModels'],
        'lastError': json['lastError'] == null ? undefined : json['lastError'],
        'version': json['version'] == null ? undefined : json['version'],
        'modelsNamespace': json['modelsNamespace'] == null ? undefined : json['modelsNamespace'],
        'trackingOutOfDateModels': json['trackingOutOfDateModels'],
    };
}

export function ModelsBuilderResponseModelToJSON(json: any): ModelsBuilderResponseModel {
    return ModelsBuilderResponseModelToJSONTyped(json, false);
}

export function ModelsBuilderResponseModelToJSONTyped(value?: ModelsBuilderResponseModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'mode': ModelsModeModelToJSON(value['mode']),
        'canGenerate': value['canGenerate'],
        'outOfDateModels': value['outOfDateModels'],
        'lastError': value['lastError'],
        'version': value['version'],
        'modelsNamespace': value['modelsNamespace'],
        'trackingOutOfDateModels': value['trackingOutOfDateModels'],
    };
}

