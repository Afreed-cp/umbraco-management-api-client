/* tslint:disable */
/* eslint-disable */
/**
 * Umbraco Management API
 * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { DocumentTypeSortModel } from './DocumentTypeSortModel';
import {
    instanceOfDocumentTypeSortModel,
    DocumentTypeSortModelFromJSON,
    DocumentTypeSortModelFromJSONTyped,
    DocumentTypeSortModelToJSON,
} from './DocumentTypeSortModel';

/**
 * @type CreateDocumentTypeRequestModelAllowedDocumentTypesInner
 * 
 * @export
 */
export type CreateDocumentTypeRequestModelAllowedDocumentTypesInner = DocumentTypeSortModel;

export function CreateDocumentTypeRequestModelAllowedDocumentTypesInnerFromJSON(json: any): CreateDocumentTypeRequestModelAllowedDocumentTypesInner {
    return CreateDocumentTypeRequestModelAllowedDocumentTypesInnerFromJSONTyped(json, false);
}

export function CreateDocumentTypeRequestModelAllowedDocumentTypesInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateDocumentTypeRequestModelAllowedDocumentTypesInner {
    if (json == null) {
        return json;
    }
    if (typeof json !== 'object') {
        return json;
    }
    if (instanceOfDocumentTypeSortModel(json)) {
        return DocumentTypeSortModelFromJSONTyped(json, true);
    }

    return {} as any;
}

export function CreateDocumentTypeRequestModelAllowedDocumentTypesInnerToJSON(json: any): any {
    return CreateDocumentTypeRequestModelAllowedDocumentTypesInnerToJSONTyped(json, false);
}

export function CreateDocumentTypeRequestModelAllowedDocumentTypesInnerToJSONTyped(value?: CreateDocumentTypeRequestModelAllowedDocumentTypesInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    if (typeof value !== 'object') {
        return value;
    }
    if (instanceOfDocumentTypeSortModel(value)) {
        return DocumentTypeSortModelToJSON(value as DocumentTypeSortModel);
    }

    return {};
}

